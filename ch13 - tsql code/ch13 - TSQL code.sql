/**********************/
/* CHAPTER 13 QUERIES */
/**********************/

-- analysis across warehouse data

/**********************************/
/* RECIPE 1 - AGGREGATE FUNCTIONS */
/**********************************/
USE [AP_INVENTORY]
GO

/********************/
/* TASK 1 - COUNT() */
/********************/

SELECT W.[AS_OF_YEAR]
	  ,C.QUARTER_NAME
	  ,C.MONTH_ABBREV
      ,W.[AS_OF_DATE]
	  ,W.[LOC_ID]
/*      ,[INV_ID]
      ,[WH_ID]
      ,[WH_NAME] */
	  ,COUNT(PROD_ID) AVAILABLE_PROD
	   ,COUNT_BIG(PROD_ID) [COUNT_BIG]
FROM [TRANSACTION].[WAREHOUSE] W
JOIN [MASTER_DATA].[CALENDAR_VIEW] C
ON W.AS_OF_DATE = C.CALENDAR_DATE
GROUP BY W.[AS_OF_YEAR]
	  ,C.QUARTER_NAME
	  ,C.MONTH_ABBREV
      ,W.[AS_OF_DATE]
	  ,W.[LOC_ID]
/*      ,[INV_ID]
      ,[WH_ID]
      ,[WH_NAME] */
GO


/************************************/
/* TASK 2 - AVG(),MIN(),MAX(),SUM() */
/************************************/

SELECT DISTINCT W.[AS_OF_YEAR]
--      ,W.[AS_OF_MONTH]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
 --     ,W.[INV_OUT]
 --     ,W.[INV_IN]
      ,AVG(W.[QTY_ON_HAND]) AS AVG_QTY_ON_HAND
	  ,MAX(W.[QTY_ON_HAND]) AS MAX_QTY_ON_HAND
	  ,MIN(W.[QTY_ON_HAND]) AS MIN_QTY_ON_HAND
	  ,SUM(W.[QTY_ON_HAND]) AS SUM_QTY_ON_HAND
  FROM [TRANSACTION].[WAREHOUSE] W
  JOIN [MASTER_DATA].[PRODUCT] P
  ON W.PROD_ID = P.PROD_ID
  JOIN [MASTER_DATA].[LOCATION] L
  ON W.LOC_ID = L.LOC_ID
WHERE W.[AS_OF_YEAR] IN('2005')
  AND  W.[INV_ID] = 'INV1'
  AND  W.[LOC_ID] = 'LOC1'
  AND  W.[WH_ID] = 'WH111'
GROUP BY   W.[AS_OF_YEAR]
--      ,W.[AS_OF_MONTH]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
ORDER BY   W.[AS_OF_YEAR]
--      ,W.[AS_OF_MONTH]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
GO

/************************************/
/* INVENTORY IN VERSUS OUT ANALYSIS */
/************************************/

SELECT DISTINCT W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]

	  -- INVENTORY IN ANALYSIS
      ,AVG(W.[INV_OUT]) AS AVG_INV_OUT
	  ,MAX(W.[INV_OUT]) AS MAX_INV_OUT
	  ,MIN(W.[INV_OUT]) AS MIN_INV_OUT
	  ,SUM(W.[INV_OUT]) AS SUM_INV_OUT

	  -- INVENTORY OUT ANALYSIS
      ,AVG(W.[INV_IN]) AS AVG_INV_IN
	  ,MAX(W.[INV_IN]) AS MAX_INV_IN
	  ,MIN(W.[INV_IN]) AS MIN_INV_IN
	  ,SUM(W.[INV_IN]) AS SUM_INV_IN

	  ,SUM(W.[INV_IN]) - 
	  SUM(W.[INV_OUT]) AS INV_DELTA
  FROM [TRANSACTION].[WAREHOUSE] W
  JOIN [MASTER_DATA].[PRODUCT] P
  ON W.PROD_ID = P.PROD_ID
  JOIN [MASTER_DATA].[LOCATION] L
  ON W.LOC_ID = L.LOC_ID
WHERE W.[AS_OF_YEAR] IN('2005')
  AND  W.[INV_ID] = 'INV1'
  AND  W.[LOC_ID] = 'LOC1'
  AND  W.[WH_ID] = 'WH111'
GROUP BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
ORDER BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
GO

/***********************************************/
/* TASK 3 - COUNT(),AVG(),MIN(),MAX() W/OVER() */
/***********************************************/

SELECT DISTINCT W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[PROD_ID] 
	  ,P.[PROD_NAME]
      ,AVG(W.[QTY_ON_HAND]) OVER(
	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  ) AS AVG_QTY_ON_HAND
	  ,MAX(W.[QTY_ON_HAND]) OVER(
	  	 PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  )  AS MAX_QTY_ON_HAND
	  ,MIN(W.[QTY_ON_HAND]) OVER(
	  	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  )  AS MIN_QTY_ON_HAND
	  ,SUM(W.[QTY_ON_HAND]) OVER(
	  	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  )  AS SUM_QTY_ON_HAND
  FROM [TRANSACTION].[WAREHOUSE] W
  JOIN [MASTER_DATA].[PRODUCT] P
  ON W.PROD_ID = P.PROD_ID
  JOIN [MASTER_DATA].[LOCATION] L
  ON W.LOC_ID = L.LOC_ID
WHERE W.[AS_OF_YEAR] IN('2005')
  AND  W.[INV_ID] = 'INV1'
  AND  W.[LOC_ID] = 'LOC1'
  AND  W.[WH_ID] = 'WH111'
ORDER BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
GO

/*******************************/
/* TASK 4 - STDEV() & STDEVP() */
/*******************************/

SELECT DISTINCT W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]

	  ,AVG(W.[QTY_ON_HAND]) AS [AVG_QTY]
	  ,STDEV(W.[QTY_ON_HAND]) AS [STDEV_QTY]
	  ,STDEVP(W.[QTY_ON_HAND]) AS [STDEVP_QTY]
	 
  FROM [TRANSACTION].[WAREHOUSE] W
  JOIN [MASTER_DATA].[PRODUCT] P
  ON W.PROD_ID = P.PROD_ID
  JOIN [MASTER_DATA].[LOCATION] L
  ON W.LOC_ID = L.LOC_ID
WHERE W.[AS_OF_YEAR] IN('2005')
  AND  W.[INV_ID] = 'INV1'
  AND  W.[LOC_ID] = 'LOC1'
  AND  W.[WH_ID] = 'WH111'
GROUP BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
ORDER BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
GO

/****************************************/
/* TASK 5 - STDEV() & STDEVP() W/OVER() */
/****************************************/

SELECT DISTINCT W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[PROD_ID] 
	  ,P.[PROD_NAME]
      ,AVG(W.[QTY_ON_HAND]) OVER(
	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  ) AS AVG_QTY_ON_HAND
	  ,STDEV(W.[QTY_ON_HAND]) OVER(
	  	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  )  AS [STDEV_QTY]
	   ,STDEVP(W.[QTY_ON_HAND]) OVER(
	  	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  )  AS [STDEVP_QTY]
  FROM [TRANSACTION].[WAREHOUSE] W
  JOIN [MASTER_DATA].[PRODUCT] P
  ON W.PROD_ID = P.PROD_ID
  JOIN [MASTER_DATA].[LOCATION] L
  ON W.LOC_ID = L.LOC_ID
WHERE W.[AS_OF_YEAR] IN('2005')
  AND  W.[INV_ID] = 'INV1'
  AND  W.[LOC_ID] = 'LOC1'
  AND  W.[WH_ID] = 'WH111'
ORDER BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
GO

/***************************/
/* TASK 6 - VAR() & VARP() */
/***************************/

SELECT DISTINCT W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]

	  ,AVG(W.[QTY_ON_HAND]) AS [AVG_QTY]
	  ,VAR(W.[QTY_ON_HAND]) AS [VAR_QTY]
	  ,VARP(W.[QTY_ON_HAND]) AS [VARP_QTY]
	 
  FROM [TRANSACTION].[WAREHOUSE] W
  JOIN [MASTER_DATA].[PRODUCT] P
  ON W.PROD_ID = P.PROD_ID
  JOIN [MASTER_DATA].[LOCATION] L
  ON W.LOC_ID = L.LOC_ID
WHERE W.[AS_OF_YEAR] IN('2005')
  AND  W.[INV_ID] = 'INV1'
  AND  W.[LOC_ID] = 'LOC1'
  AND  W.[WH_ID] = 'WH111'
GROUP BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
ORDER BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[WH_NAME]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
GO

/************************************/
/* TASK 7 - VAR() & VARP() W/OVER() */
/************************************/

SELECT DISTINCT W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[PROD_ID] 
	  ,P.[PROD_NAME]
      ,AVG(W.[QTY_ON_HAND]) OVER(
	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  ) AS AVG_QTY_ON_HAND
	  ,VAR(W.[QTY_ON_HAND]) OVER(
	  	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  )  AS [VAR_QTY]
	   ,VARP(W.[QTY_ON_HAND]) OVER(
	  	  PARTITION BY W.[AS_OF_YEAR]
		,W.[LOC_ID]
		,L.LOC_NAME
		,W.[INV_ID]
		,W.[WH_ID]
		,W.PROD_ID
	  )  AS [VARP_QTY]
  FROM [TRANSACTION].[WAREHOUSE] W
  JOIN [MASTER_DATA].[PRODUCT] P
  ON W.PROD_ID = P.PROD_ID
  JOIN [MASTER_DATA].[LOCATION] L
  ON W.LOC_ID = L.LOC_ID
WHERE W.[AS_OF_YEAR] IN('2005')
  AND  W.[INV_ID] = 'INV1'
  AND  W.[LOC_ID] = 'LOC1'
  AND  W.[WH_ID] = 'WH111'
ORDER BY   W.[AS_OF_YEAR]
	  ,W.[LOC_ID]
	  ,L.LOC_NAME
      ,W.[INV_ID]
      ,W.[WH_ID]
      ,W.[PROD_ID]
	  ,P.[PROD_NAME]
GO

/***************************************/
/* TASK 8 - GROUPING SETS W/GROUPING() */
/***************************************/

SELECT DISTINCT ISR.[AS_OF_YEAR]
	  ,C.[CALENDAR_QTR]
      ,ISR.[AS_OF_MONTH]
	  ,C.[CALENDAR_WEEK]
      ,ISR.[PROD_ID]
      ,SUM(ISR.[SALES_TOTAL])
	  ,GROUPING(ISR.[SALES_TOTAL])
FROM [AP_INVENTORY].[TRANSACTION].[INVENTORY_SALES_REPORT] ISR
JOIN (
	SELECT DISTINCT [CALENDAR_YEAR],
		[CALENDAR_QTR],
		[CALENDAR_MONTH],
		CASE 
			WHEN DATEPART(dd,[CALENDAR_DATE]) BETWEEN 1 and 7 THEN 1
			WHEN DATEPART(dd,[CALENDAR_DATE]) BETWEEN 8 and 14 THEN 2
			WHEN DATEPART(dd,[CALENDAR_DATE]) BETWEEN 15 and 21 THEN 3
			WHEN DATEPART(dd,[CALENDAR_DATE]) BETWEEN 22 and 28 THEN 4
			ELSE 5
		END AS CALENDAR_WEEK
	FROM [MASTER_DATA].[CALENDAR] 
	) C
ON ISR.AS_OF_YEAR = C.CALENDAR_YEAR
AND ISR.AS_OF_MONTH = C.CALENDAR_MONTH
WHERE ISR.AS_OF_YEAR = 2002
AND ISR.PROD_ID IN ('P101','P201')
GROUP BY
	ISR.[AS_OF_YEAR],
	C.[CALENDAR_QTR],
	C.[CALENDAR_WEEK],
	ISR.[AS_OF_MONTH],
	ISR.[PROD_ID],
	ISR.[SALES_TOTAL]
	WITH ROLLUP
ORDER BY  ISR.[AS_OF_YEAR] ASC
	  ,C.[CALENDAR_QTR] ASC
      ,ISR.[AS_OF_MONTH] DESC
	  ,C.[CALENDAR_WEEK] DESC
	  ,GROUPING(ISR.[SALES_TOTAL]) DESC
GO

SELECT W.[AS_OF_YEAR]
	  ,W.QTR
	  ,W.[MONTH]
	  ,W.[PROD_ID] 
	  ,SUM_QTY_ON_HAND AS SUM_QTY_ON_HAND
	  ,GROUPING(W.[SUM_QTY_ON_HAND]) AS [GROUPING_SETS]
  /*********************************************************/
  /* need to sum here as GROUPING does not allow reference */
  /* to aggregate functions                                */
  /*********************************************************/
  FROM ( 
  SELECT DISTINCT [AS_OF_YEAR]
  	  ,DATEPART(qq,[AS_OF_DATE]) AS QTR
	  ,[AS_OF_MONTH] AS [MONTH]
      ,[LOC_ID] 
	  ,[INV_ID]
      ,[WH_ID]
	  ,[PROD_ID]
	  ,SUM([QTY_ON_HAND]) AS SUM_QTY_ON_HAND
   FROM [TRANSACTION].[WAREHOUSE]
   WHERE [AS_OF_YEAR] IN('2005','2006','2007')
	AND [INV_ID] = 'INV1'
	AND [LOC_ID] = 'LOC1'
    AND [WH_ID] = 'WH111'
	AND [PROD_ID] = 'P213'
   GROUP BY [AS_OF_YEAR]
      ,DATEPART(qq,[AS_OF_DATE])
  	  ,AS_OF_MONTH
      ,[LOC_ID] 
	  ,[INV_ID]
      ,[WH_ID]
	  ,[PROD_ID]
  ) W
  JOIN [MASTER_DATA].[PRODUCT] P
  ON W.PROD_ID = P.PROD_ID
  JOIN [MASTER_DATA].[LOCATION] L
  ON W.LOC_ID = L.LOC_ID
  JOIN [MASTER_DATA].[CALENDAR_VIEW] CV
  ON W.AS_OF_YEAR = CV.CALENDAR_YEAR
  AND W.[MONTH] = CV.CALENDAR_MONTH
GROUP BY W.[AS_OF_YEAR]
	  ,W.QTR
	  ,W.[MONTH]
	   ,W.[PROD_ID] 
	  ,W.[SUM_QTY_ON_HAND] WITH ROLLUP
ORDER BY W.[AS_OF_YEAR]
	  ,W.QTR
	  ,W.[MONTH]
	  ,W.[PROD_ID] 
	  ,W.[SUM_QTY_ON_HAND]
	GO 

USE [AP_INVENTORY]
GO

SELECT [AS_OF_YEAR]
      ,DATEPART(QQ,[AS_OF_DATE]) AS [QUARTER]
      ,[AS_OF_MONTH]
	  ,[LOC_ID]
      ,[INV_ID]
      ,[WH_ID]
      ,[PROD_ID]
      ,SUM([INV_OUT]) AS INV_IN_SUM
      ,SUM([INV_IN]) AS INV_OUT_SUM
      ,SUM([QTY_ON_HAND]) AS QTY_ON_HAND_SUM
	  ,GROUPING([PROD_ID]) AS [GROUPING]
FROM [TRANSACTION].[WAREHOUSE]
WHERE [AS_OF_YEAR] = 2010
AND [AS_OF_MONTH] = 12
GROUP BY [AS_OF_YEAR]
      ,DATEPART(QQ,[AS_OF_DATE])
      ,[AS_OF_MONTH]
	  ,AS_OF_DATE
	  ,[LOC_ID]
      ,[INV_ID]
      ,[WH_ID]
      ,[PROD_ID]
	  ,[INV_OUT]
	  ,[INV_IN]
	  ,[QTY_ON_HAND] WITH ROLLUP
ORDER BY [AS_OF_YEAR]
      ,[AS_OF_MONTH]
      ,[AS_OF_DATE]
	  ,[LOC_ID]
      ,[INV_ID]
      ,[WH_ID]
GO

-- GROUPING SETS

SELECT DISTINCT ISR.[AS_OF_YEAR]
	  ,C.[CALENDAR_QTR]
	  ,C.CALENDAR_WEEK
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,SUM(ISR.[SALES_TOTAL])
FROM [AP_INVENTORY].[TRANSACTION].[INVENTORY_SALES_REPORT] ISR
JOIN (
	SELECT DISTINCT [CALENDAR_YEAR],
		[CALENDAR_QTR],
		[CALENDAR_MONTH],
		CASE 
			WHEN DATEPART(dd,[CALENDAR_DATE]) BETWEEN 1 and 7 THEN 1
			WHEN DATEPART(dd,[CALENDAR_DATE]) BETWEEN 8 and 14 THEN 2
			WHEN DATEPART(dd,[CALENDAR_DATE]) BETWEEN 15 and 21 THEN 3
			WHEN DATEPART(dd,[CALENDAR_DATE]) BETWEEN 22 and 28 THEN 4
			ELSE 5
		END AS CALENDAR_WEEK
	FROM [MASTER_DATA].[CALENDAR] 
	) C
ON ISR.AS_OF_YEAR = C.CALENDAR_YEAR
AND ISR.AS_OF_MONTH = C.CALENDAR_MONTH
WHERE ISR.AS_OF_YEAR = 2002
AND ISR.PROD_ID IN ('P101','P201')
GROUP BY
	GROUPING SETS
	(
	(ISR.[AS_OF_YEAR]), -- 1st grouping set
	(ISR.[AS_OF_YEAR],C.[CALENDAR_QTR]), -- 2nd grouping set
	(ISR.[AS_OF_YEAR],C.[CALENDAR_QTR],ISR.[AS_OF_MONTH]), -- 3rd grouping set
	(ISR.[AS_OF_YEAR],C.[CALENDAR_QTR],ISR.[AS_OF_MONTH],C.[CALENDAR_WEEK]), -- 4th grouping set
	(ISR.[AS_OF_YEAR],C.[CALENDAR_QTR],ISR.[AS_OF_MONTH],C.[CALENDAR_WEEK],ISR.[PROD_ID]), -- 5th grouping set
	() -- EMPTY GROUPING SET
	) 
ORDER BY  ISR.[AS_OF_YEAR] DESC
	  ,C.[CALENDAR_QTR] DESC
      ,ISR.[AS_OF_MONTH]
	  ,C.CALENDAR_WEEK
      ,ISR.[PROD_ID]
GO


/***********************************/
/* RECIPE 2 - ANALYTICAL FUNCTIONS */
/***********************************/

-- we are going to need this table

/*
DROP TABLE IF EXISTS [TRANSACTION].[INVENTORY_SALES_REPORT]
GO
*/

TRUNCATE TABLE [TRANSACTION].[INVENTORY_SALES_REPORT]
GO

INSERT INTO [TRANSACTION].[INVENTORY_SALES_REPORT]
SELECT  W.[AS_OF_YEAR]
--SELECT  DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE
	  ,SUM(W.[INV_OUT]) AS INV_OUT_TOTAL
      ,SUM(W.[INV_OUT] * P.RETAIL_PRICE) AS SALES_TOTAL
--INTO [TRANSACTION].[INVENTORY_SALES_REPORT]
FROM [TRANSACTION].[WAREHOUSE] W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
GROUP BY W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE 
GO


/************************/
/* TASK 1 - CUME_DIST() */
/************************/

SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,W.SALE_TOTAL
	   ,RANK() OVER (
	  	--  PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
		--	ORDER BY W.[AS_OF_YEAR],W.[PROD_ID] DESC
		--	PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH],W.SALE_TOTAL DESC 

	  ) AS SALES_RANK
	  ,DENSE_RANK() OVER (
			--PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			--ORDER BY W.[PROD_ID],W.SALE_TOTAL DESC
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH],W.SALE_TOTAL DESC

	  ) AS SALES_DENSE_RANK 
	  ,CONVERT(DECIMAL(10,2),CUME_DIST()  OVER (
			PARTITION BY W.[AS_OF_YEAR] ,W.[AS_OF_MONTH]
			--ORDER BY W.[PROD_ID],W.SALE_TOTAL DESC
			ORDER BY W.SALE_TOTAL ASC
				)) AS [CUME_DIST]
FROM (
SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE
	  ,SUM(W.[INV_OUT]) AS INV_OUT_TOTAL
      ,SUM(W.[INV_OUT] * P.RETAIL_PRICE) AS SALE_TOTAL
FROM [TRANSACTION].[WAREHOUSE] W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR IN (2002,2003)
GROUP BY W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE 
)W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR = 2002
--AND W.AS_OF_MONTH = 1
ORDER BY
	W.[AS_OF_YEAR]
    ,W.[AS_OF_MONTH]
	,W.SALE_TOTAL DESC
GO

/**************************/
/* TASK 2 - FIRST_VALUE() */
/**************************/

SELECT ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,ISR.[SALES_TOTAL] AS [THIS_MONTH]
	  ,FIRST_VALUE(ISR.[PROD_ID]) OVER (
				PARTITION BY ISR.[AS_OF_YEAR],ISR.[AS_OF_MONTH]
				ORDER BY ISR.[SALES_TOTAL] ASC
				)
		AS [FIRST_VALUE]

FROM [TRANSACTION].[INVENTORY_SALES_REPORT] ISR
WHERE ISR.AS_OF_YEAR = '2002'
--AND PROD_ID = 'P045'
ORDER BY ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
GO

/*************************/
/* TASK 3 - LAST_VALUE() */
/*************************/

SELECT ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,ISR.[SALES_TOTAL] AS [THIS_MONTH]

		,LAST_VALUE(ISR.[PROD_ID]) OVER (
				PARTITION BY ISR.[AS_OF_YEAR],ISR.[AS_OF_MONTH]
				ORDER BY ISR.[SALES_TOTAL] ASC
				)
		AS [LAST_VALUE]
	 
FROM [TRANSACTION].[INVENTORY_SALES_REPORT] ISR
WHERE ISR.AS_OF_YEAR = '2002'
--AND PROD_ID = 'P045'
ORDER BY ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
GO

/***************************/
/* TASK 4 - LAG() & LEAD() */
/***************************/

/*************/
/* EXAMPLE 1 */
/*************/

SELECT ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,ISR.[SALES_TOTAL]
	  ,LAG(ISR.[SALES_TOTAL]) OVER (
				PARTITION BY ISR.[AS_OF_YEAR]
				ORDER BY ISR.[AS_OF_MONTH] ASC
				)
		AS [LAST_MONTH]
		,LEAD(ISR.[SALES_TOTAL]) OVER (
				PARTITION BY ISR.[AS_OF_YEAR]
				ORDER BY ISR.[AS_OF_MONTH] ASC
				)
		AS [NEXT_MONTH]
FROM [TRANSACTION].[INVENTORY_SALES_REPORT] ISR
WHERE ISR.AS_OF_YEAR = '2002'
AND PROD_ID = 'P045'
GO

/***************/
/* EXAMPLE 2 - */
/***************/

SELECT ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,ISR.[SALES_TOTAL]
	  ,LAG(ISR.[SALES_TOTAL]) OVER (
				PARTITION BY ISR.[AS_OF_YEAR]
				ORDER BY ISR.[AS_OF_MONTH] ASC
				)
		AS [LAST_MONTH]

	  ,ISR.[SALES_TOTAL] - 
	  LAG(ISR.[SALES_TOTAL]) OVER (
				PARTITION BY ISR.[AS_OF_YEAR]
				ORDER BY ISR.[AS_OF_MONTH] ASC
				)
		AS [CHANGE]

FROM [TRANSACTION].[INVENTORY_SALES_REPORT] ISR
WHERE ISR.AS_OF_YEAR = '2002'
AND PROD_ID = 'P045'
ORDER BY ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
GO

/*************/
/* EXAMPLE 3 */
/*************/

SELECT ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,ISR.[SALES_TOTAL] AS [THIS_MONTH]
	  ,LEAD(ISR.[SALES_TOTAL]) OVER (
				PARTITION BY ISR.[AS_OF_YEAR]
				ORDER BY ISR.[AS_OF_MONTH] ASC
				)
		AS [NEXT_MONTH]

	  ,LEAD(ISR.[SALES_TOTAL]) OVER (
				PARTITION BY ISR.[AS_OF_YEAR]
				ORDER BY ISR.[AS_OF_MONTH] ASC
				) -
				ISR.[SALES_TOTAL] 
		AS [CHANGE]

FROM [TRANSACTION].[INVENTORY_SALES_REPORT] ISR
WHERE ISR.AS_OF_YEAR = '2002'
AND PROD_ID = 'P045'
ORDER BY ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
GO

/***************************/
/* TASK 6 - PERCENT_RANK() */
/***************************/

-- EXAMPLE 2

SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,W.SALE_TOTAL
	   ,RANK() OVER (
	  	--  PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
		--	ORDER BY W.[AS_OF_YEAR],W.[PROD_ID] DESC
		--	PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH],W.SALE_TOTAL DESC 

	  ) AS SALES_RANK
	  ,DENSE_RANK() OVER (
			--PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			--ORDER BY W.[PROD_ID],W.SALE_TOTAL DESC
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH],W.SALE_TOTAL DESC

	  ) AS SALES_DENSE_RANK 
	  ,CONVERT(DECIMAL(10,2),PERCENT_RANK()  OVER (
			PARTITION BY W.[AS_OF_YEAR] ,W.[AS_OF_MONTH]
			--ORDER BY W.[PROD_ID],W.SALE_TOTAL DESC
			ORDER BY W.SALE_TOTAL ASC
				)) AS [PERCENT_RANK]
FROM (
SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE
	  ,SUM(W.[INV_OUT]) AS INV_OUT_TOTAL
      ,SUM(W.[INV_OUT] * P.RETAIL_PRICE) AS SALE_TOTAL
FROM [TRANSACTION].[WAREHOUSE] W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR IN (2002,2003)
GROUP BY W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE 
)W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR = 2002
--AND W.AS_OF_MONTH = 1
ORDER BY
	W.[AS_OF_YEAR]
    ,W.[AS_OF_MONTH]
	,W.SALE_TOTAL DESC
GO

-- EXAMPLE 2

SELECT ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,ISR.[RETAIL_PRICE]
      ,ISR.[INV_OUT_TOTAL]
      ,ISR.[SALES_TOTAL]
	  ,CONVERT(DECIMAL(10,2),PERCENT_RANK()  
			OVER (
				PARTITION BY ISR.[AS_OF_YEAR] ,ISR.[AS_OF_MONTH]
				ORDER BY ISR.SALES_TOTAL ASC
				)
		) AS [PERCENT_RANK]
FROM [TRANSACTION].[INVENTORY_SALES_REPORT] ISR
WHERE ISR.AS_OF_YEAR = '2002'
-- comment out to get other months
AND ISR.AS_OF_MONTH = 1
GO
/**************************************************/
/* TASK 7 - PERCENTILE_CONT() & PERCENTILE_DISC() */
/**************************************************/

USE [AP_INVENTORY]
GO

SELECT ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,ISR.[RETAIL_PRICE]
      ,ISR.[INV_OUT_TOTAL]
      ,ISR.[SALES_TOTAL]
	  ,CONVERT(DECIMAL(10,2),PERCENTILE_CONT(.50)  
		WITHIN GROUP (ORDER BY  ISR.SALES_TOTAL ASC)
			OVER (PARTITION BY ISR.[AS_OF_YEAR] ,ISR.[AS_OF_MONTH])) AS [PERCENT_CONT]

	  ,CONVERT(DECIMAL(10,2),PERCENTILE_DISC(.50)  
		WITHIN GROUP (ORDER BY  ISR.SALES_TOTAL ASC)
			OVER (PARTITION BY ISR.[AS_OF_YEAR] ,ISR.[AS_OF_MONTH])) AS [PERCENT_DISC]
FROM [TRANSACTION].[INVENTORY_SALES_REPORT] ISR
WHERE ISR.AS_OF_YEAR = '2002'
-- comment out to get other months
AND ISR.AS_OF_MONTH = 1
GO


/********************************/
/* RECIPE 4 - RANKING FUNCTIONS */
/********************************/

/*********************************/
/* TASK 1 - RANK() & DENSE_RANK()*/
/*********************************/

/* VALIDATE WITH
SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE
	  ,SUM(W.[INV_OUT]) AS INV_OUT_TOTAL
      ,SUM(W.[INV_OUT] * P.RETAIL_PRICE) AS SALE_TOTAL
FROM [TRANSACTION].[WAREHOUSE] W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR IN (2002,2003)
GROUP BY W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE 
ORDER BY 1,2,3,6
GO
*/

SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
		,W.SALE_TOTAL
	,W.RETAIL_PRICE
	  ,W.INV_OUT_TOTAL
	  ,RANK() OVER (
	  	--  PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
		--	ORDER BY W.[AS_OF_YEAR],W.[PROD_ID] DESC
		--	PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH],W.SALE_TOTAL DESC 

	  ) AS SALES_RANK
	  ,DENSE_RANK() OVER (
			--PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			--ORDER BY W.[PROD_ID],W.SALE_TOTAL DESC
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH],W.SALE_TOTAL DESC 

	  ) AS SALES_DENSE_RANK 
FROM (
SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE
	  ,SUM(W.[INV_OUT]) AS INV_OUT_TOTAL
      ,SUM(W.[INV_OUT] * P.RETAIL_PRICE) AS SALE_TOTAL
FROM [TRANSACTION].[WAREHOUSE] W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR IN (2002,2003)
GROUP BY W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE 
)W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR IN (2002,2003)
ORDER BY  W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
		,W.SALE_TOTAL DESC
GO


/********************/
/* TASK 2 - NTILE() */
/********************/

SELECT ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
      ,ISR.[PROD_ID]
      ,ISR.[SALES_TOTAL] AS [THIS_MONTH]
	  ,NTILE(4)OVER (
				PARTITION BY ISR.[AS_OF_YEAR],ISR.[AS_OF_MONTH]
				ORDER BY ISR.[SALES_TOTAL] ASC
				)
		AS [NTILE]
	 
FROM [TRANSACTION].[INVENTORY_SALES_REPORT] ISR
WHERE ISR.AS_OF_YEAR = '2002'
--AND PROD_ID = 'P045'
ORDER BY ISR.[AS_OF_YEAR]
      ,ISR.[AS_OF_MONTH]
GO

/*************************/
/* TASK 3 - ROW_NUMBER() */
/*************************/

SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
		,W.SALE_TOTAL
	,W.RETAIL_PRICE
	  ,W.INV_OUT_TOTAL
	  ,RANK() OVER (
	  	--  PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
		--	ORDER BY W.[AS_OF_YEAR],W.[PROD_ID] DESC
		--	PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH],W.SALE_TOTAL DESC 

	  ) AS SALES_RANK
	  ,DENSE_RANK() OVER (
			--PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			--ORDER BY W.[PROD_ID],W.SALE_TOTAL DESC
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH],W.SALE_TOTAL DESC

	  ) AS SALES_DENSE_RANK 
	  ,ROW_NUMBER()  OVER (
			PARTITION BY W.[AS_OF_YEAR],W.[AS_OF_MONTH]
			--ORDER BY W.[PROD_ID],W.SALE_TOTAL DESC
			ORDER BY 
				W.[AS_OF_YEAR],W.[AS_OF_MONTH] ASC
				) AS [ROW_NUMBER]
FROM (
SELECT DISTINCT W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE
	  ,SUM(W.[INV_OUT]) AS INV_OUT_TOTAL
      ,SUM(W.[INV_OUT] * P.RETAIL_PRICE) AS SALE_TOTAL
FROM [TRANSACTION].[WAREHOUSE] W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR IN (2002,2003)
GROUP BY W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
      ,W.[PROD_ID]
	  ,P.RETAIL_PRICE 
)W
JOIN [MASTER_DATA].[PRODUCT] P
ON W.PROD_ID = P.PROD_ID
WHERE W.AS_OF_YEAR IN (2002,2003)
ORDER BY  W.[AS_OF_YEAR]
      ,W.[AS_OF_MONTH]
		,W.SALE_TOTAL DESC
GO

