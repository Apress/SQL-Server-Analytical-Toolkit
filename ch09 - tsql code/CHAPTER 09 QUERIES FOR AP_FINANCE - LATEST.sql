/**********************/
/* CHAPTER 09 QUERIES */
/**********************/

/************************/
/* MODIFIED: 06/09/2022 */
/************************/

USE [AP_FINANCE]
GO

/**********************************/
/* RECIPE 1 - AGGREGATE FUNCTIONS */
/**********************************/

/********************/
/* TASK 1 - COUNT() */
/********************/

/***************/
/* LISTING 9.1 */
/***************/

SELECT DISTINCT YEAR([TRANS_DATE]) AS [YEAR],
	MONTH([TRANS_DATE]) AS [MONTH],
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL],
	COUNT([TRANS_DATE]) AS NUM_TRANSACTION
--	COUNT_BIG([TRANS_DATE]) AS NUM_TRANSACTION_BIG,
	
FROM [TRADE].[TRANSACTION]
WHERE CUST_ID = 'C0000005'
AND BUY_SELL IN('B','S')
AND YEAR([TRANS_DATE]) = 2013
AND SYMBOL = 'MSFT220422C0016000'
GROUP BY YEAR([TRANS_DATE]),
	MONTH([TRANS_DATE]),
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL]
ORDER BY  YEAR([TRANS_DATE]),
	MONTH([TRANS_DATE]),
	[CUST_ID],
	[ACCT_NO]
GO

/*********/
/* BONUS */
/*********/

SELECT DISTINCT YEAR([TRANS_DATE]) AS [YEAR],
	MONTH([TRANS_DATE]) AS [MONTH],
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL],
	COUNT([TRANS_DATE]) AS NUM_TRANSACTION,
--	COUNT_BIG([TRANS_DATE]) AS NUM_TRANSACTION_BIG,
	CASE 
		WHEN BUY_SELL = 'S' THEN COUNT([BUY_SELL])
	ELSE 0
	END AS NUM_SELLS,
	CASE 
		WHEN BUY_SELL = 'B' THEN COUNT([BUY_SELL])
	ELSE 0
	END AS NUM_BUYS
FROM [TRADE].[TRANSACTION]
WHERE CUST_ID = 'C0000005'
AND BUY_SELL IN('B','S')
AND YEAR([TRANS_DATE]) = 2013
AND SYMBOL = 'MSFT220422C0016000'
GROUP BY YEAR([TRANS_DATE]),
	MONTH([TRANS_DATE]),
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL],
	BUY_SELL
ORDER BY  YEAR([TRANS_DATE]),
	MONTH([TRANS_DATE]),
	[CUST_ID],
	[ACCT_NO]
GO

/******************/
/* TASK 2 - SUM() */
/******************/

/***************/
/* LISTING 9.2 */
/***************/

SELECT YEAR([TRANS_DATE]) AS [YEAR],
	MONTH([TRANS_DATE]) AS [MONTH],
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL],
	SUM([TRANS_AMOUNT]) AS SUM_TRANSACTION
FROM [TRADE].[TRANSACTION]
WHERE CUST_ID = 'C0000005'
AND SYMBOL = 'MSFT220422C0016000'
GROUP BY YEAR([TRANS_DATE]),
	MONTH([TRANS_DATE]),
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL]
ORDER BY  YEAR([TRANS_DATE]),
	MONTH([TRANS_DATE]),
	[CUST_ID],
	[ACCT_NO]
GO

/***************************/
/* TASK 3 - SUM() W/OVER() */
/***************************/

/***************/
/* LISTING 9.3 */
/***************/

DROP VIEW IF EXISTS TRADE.MSFT220422C0016000_ANALYSIS
GO

CREATE VIEW TRADE.MSFT220422C0016000_ANALYSIS
AS
SELECT YEAR([TRANS_DATE]) AS [YEAR],
	MONTH([TRANS_DATE]) AS [MONTH],
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL],
	SUM([TRANS_AMOUNT]) AS SUM_TRANSACTION
FROM [TRADE].[TRANSACTION]
WHERE SYMBOL = 'MSFT220422C0016000'
GROUP BY YEAR([TRANS_DATE]),
	MONTH([TRANS_DATE]),
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL]
/*
ORDER BY  YEAR([TRANS_DATE]),
	MONTH([TRANS_DATE]),
	[CUST_ID],
	[ACCT_NO]
*/
GO

/***************/
/* LISTING 9.4 */
/***************/

SELECT DISTINCT [YEAR],
	[MONTH],
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL],
	SUM(SUM_TRANSACTION) OVER (
		PARTITION BY [YEAR],[MONTH]
		ORDER BY SUM_TRANSACTION
	) AS SUM_TRANSACTION
FROM TRADE.MSFT220422C0016000_ANALYSIS
WHERE CUST_ID = 'C0000005'
ORDER BY [YEAR],[MONTH]
GO


/************************/
/* TASK 4 - MAX()/MIN() */
/************************/

/***************/
/* LISTING 9.5 */
/***************/

SELECT [YEAR],
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL],
	SUM(SUM_TRANSACTION) AS SUM_TRADE,
	MIN(SUM_TRANSACTION) AS SMALLEST_TRADE,
	MAX(SUM_TRANSACTION) AS LARGEST_TRADE
FROM [TRADE].MSFT220422C0016000_ANALYSIS
WHERE SYMBOL = 'MSFT220422C0016000'
AND [YEAR] IN(2012,2013,2014)
GROUP BY [YEAR],
	[CUST_ID],
	[ACCT_NO],
	[SYMBOL]
ORDER BY  [YEAR],
	[CUST_ID],
	[ACCT_NO]
GO

/*********************************/
/* TASK 5 - MAX()/MIN() W/OVER() */
/*********************************/

/***************/
/* LISTING 9.6 */
/***************/

SELECT DISTINCT [YEAR],
	[MONTH],
	[CUST_ID],
	[ACCT_NO],
	SUM(SUM_TRANSACTION) OVER (
		PARTITION BY [YEAR],[CUST_ID]
		ORDER BY [MONTH],SUM_TRANSACTION
	) AS SUM_TRANSACTION,
	MIN(SUM_TRANSACTION) OVER (
		PARTITION BY [YEAR],[CUST_ID]
		ORDER BY [MONTH],SUM_TRANSACTION
	) AS MIN_TRANSACTION,
	MAX(SUM_TRANSACTION) OVER (
		PARTITION BY [YEAR],[CUST_ID]
		ORDER BY [MONTH],SUM_TRANSACTION
	) AS MAX_TRANSACTION
FROM TRADE.MSFT220422C0016000_ANALYSIS
WHERE CUST_ID = 'C0000001'
AND [YEAR] = 2012
GO

/***********************************/
/* TASK 6 - AVG() & AVG() W/OVER() */
/***********************************/

/***************/
/* LISTING 9.7 */
/***************/

SELECT DISTINCT [YEAR],
	[MONTH],
	[CUST_ID],
	[ACCT_NO],
	AVG(SUM_TRANSACTION) AS AVG_TRANSACTION
FROM TRADE.MSFT220422C0016000_ANALYSIS
WHERE CUST_ID = 'C0000001'
AND [YEAR] = 2012
GROUP BY [YEAR],
	[MONTH],
	[CUST_ID],
	[ACCT_NO]
ORDER BY 
	[YEAR],
	[MONTH]
GO

/***************/
/* LISTING 9.8 */
/***************/

SELECT DISTINCT [YEAR],
	[MONTH],
	[CUST_ID],
	[ACCT_NO],
	AVG(SUM_TRANSACTION) OVER (
		PARTITION BY [YEAR],[MONTH]
		ORDER BY [YEAR]
	) AS AVG_TRANSACTION
FROM TRADE.MSFT220422C0016000_ANALYSIS
WHERE CUST_ID = 'C0000001'
AND [YEAR] IN(2012,2013)
ORDER BY [YEAR],[MONTH]
GO

/***********************/
/* TASK 7 - GROUPING() */
/***********************/

/***************/
/* LISTING 9.9 */
/***************/

DROP VIEW IF EXISTS TRADE.MONTHLY_INSTRUMENT_PERFORMANCE
GO

CREATE VIEW TRADE.MONTHLY_INSTRUMENT_PERFORMANCE
AS
SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,YEAR(T.[TRANS_DATE])		AS TRANS_YEAR
	,CWV.[MONTH_NAME]			AS TRANS_MONTH
	,CWV.[CALENDAR_MONTH]		AS TRANS_MONTH_NO
	,CWV.[QUARTER_NAME]			AS TRANS_QTR
	,CWV.[CALENDAR_YEAR_WEEK]	AS TRANS_WEEK
	,CWV.[CALENDAR_DATE]		AS TRANS_DATE
	,T.SYMBOL
    ,SUM(T.[TRANS_AMOUNT])	    AS SUM_TRANS_AMT
FROM [AP_FINANCE].[TRADE].[TRANSACTION] T
JOIN [MASTER_DATA].[CALENDAR_WEEK_VIEW] CWV
ON T.TRANS_DATE = CWV.[CALENDAR_DATE]
GROUP BY T.[CUST_ID]
    ,T.[ACCT_NO]
	,YEAR(T.[TRANS_DATE])
	,CWV.[MONTH_NAME]
	,CWV.[CALENDAR_MONTH]
	,CWV.[QUARTER_NAME]
	,CWV.[CALENDAR_YEAR_WEEK]
	,CWV.[MONTH_NAME]
	,CWV.[CALENDAR_DATE]
	,T.SYMBOL
GO

/****************/
/* LISTING 9.10 */
/****************/

SELECT 	[CUST_ID]
    ,[ACCT_NO]
	,TRANS_YEAR
	,TRANS_MONTH
	,TRANS_QTR
	,TRANS_WEEK
    ,SUM(SUM_TRANS_AMT) AS SUM_TRANS_AMT
	,GROUPING(SUM_TRANS_AMT) AS TRANS_AMT_GRP
FROM TRADE.MONTHLY_INSTRUMENT_PERFORMANCE T
WHERE T.CUST_ID = 'C0000001'
AND TRANS_YEAR = 2015
AND ACCT_NO = 'A06C1'
AND SYMBOL = 'GC=F'
AND TRANS_QTR	= '2nd Quarter'
GROUP BY [CUST_ID]
    ,[ACCT_NO]
	,TRANS_YEAR
	,TRANS_MONTH
	,TRANS_MONTH_NO
	,TRANS_QTR
	,TRANS_WEEK
	,TRANS_DATE
    ,SUM_TRANS_AMT WITH ROLLUP
HAVING GROUPING(SUM_TRANS_AMT) = 1
ORDER BY T.TRANS_MONTH_NO
	,TRANS_QTR
	,TRANS_WEEK
    ,SUM_TRANS_AMT
	,GROUPING(SUM_TRANS_AMT)
GO

-- INCLUDE THE TRANSACTION DATE

/****************/
/* LISTING 9.11 */
/****************/

SELECT 	[CUST_ID]
    ,[ACCT_NO]
	,TRANS_YEAR
	,TRANS_MONTH
	,TRANS_QTR
	,TRANS_WEEK
	,TRANS_DATE
    ,SUM(SUM_TRANS_AMT) AS SUM_TRANS_AMT
	,GROUPING(SUM_TRANS_AMT) AS TRANS_AMT_GRP
FROM TRADE.MONTHLY_INSTRUMENT_PERFORMANCE T
WHERE T.CUST_ID = 'C0000001'
AND TRANS_YEAR = 2015
AND ACCT_NO = 'A06C1'
AND SYMBOL = 'GC=F'
AND TRANS_QTR	= '2nd Quarter'
GROUP BY [CUST_ID]
    ,[ACCT_NO]
	,TRANS_YEAR
	,TRANS_MONTH
	,TRANS_MONTH_NO
	,TRANS_QTR
	,TRANS_WEEK
	,TRANS_DATE
    ,SUM_TRANS_AMT WITH ROLLUP
HAVING GROUPING(SUM_TRANS_AMT) = 1
ORDER BY T.TRANS_MONTH_NO
	,TRANS_QTR
	,TRANS_WEEK
	,TRANS_DATE
    ,SUM_TRANS_AMT
	,GROUPING(SUM_TRANS_AMT)
GO

/* OR
ORDER BY T.TRANS_MONTH_NO DESC
	,TRANS_QTR DESC
	,TRANS_WEEK DESC
	,TRANS_DATE DESC
    ,SUM_TRANS_AMT
	,GROUPING(SUM_TRANS_AMT)
GO
*/

-- START HERE - 06-10-2022

/*******************************/
/* TASK 8 - STDEV() & STDEVP() */
/*******************************/

/****************/
/* LISTING 9.12 */
/****************/

SELECT [TICKER]
	  ,AVG([QUOTE]) AS AVG_DAY_QUOTE
	  ,MIN([QUOTE]) AS MIN_DAY_QUOTE
	  ,MAX([QUOTE]) AS MAX_DAY_QUOTE
	  ,CONVERT(DECIMAL(10,2),STDEV([QUOTE])) AS STDEV_DAY_QUOTE
	  ,STDEV([QUOTE])AS STDEV_DAY_QUOTE
	  ,STDEVP([QUOTE])AS STDEVP_DAY_QUOTE
FROM [AP_FINANCE].[MASTER_DATA].[TICKER_HISTORY]
WHERE TICKER_DATE = '2015-01-15'
GROUP BY [TICKER]
GO

/****************************************/
/* TASK 9 - STDEV() & STDEVP() W/OVER() */
/****************************************/

/****************/
/* LISTING 9.13 */
/****************/

SELECT DISTINCT [TICKER]
      ,[COMPANY]
      ,[TICKER_DATE]
      ,[QUOTE_HOUR]
      ,[QUOTE]
	  ,AVG([QUOTE]) OVER (
		PARTITION BY [TICKER],[COMPANY],[TICKER_DATE]
		) AS AVG_DAY_QUOTE
	  ,MIN([QUOTE])  OVER (
		PARTITION BY [TICKER],[COMPANY],[TICKER_DATE]
		) AS MIN_DAY_QUOTE
	  ,MAX([QUOTE]) OVER (
		PARTITION BY [TICKER],[COMPANY],[TICKER_DATE]
		)  AS MAX_DAY_QUOTE
	  ,STDEV([QUOTE]) OVER (
		) AS STDEV_DAY_QUOTE
	  ,STDEVP([QUOTE]) OVER (
		) AS STDEVP_DAY_QUOTE
FROM [AP_FINANCE].[MASTER_DATA].[TICKER_HISTORY]
WHERE TICKER_DATE = '2015-01-15'
GO

/****************************/
/* TASK 10 - VAR() & VARP() */
/****************************/

/****************/
/* LISTING 9.14 */
/****************/

SELECT AVG(ALL [QUOTE]) 
FROM  [AP_FINANCE].[MASTER_DATA].[TICKER_HISTORY]
WHERE [TICKER_DATE] = '2015-01-01';
GO

SELECT [TICKER]
	,AVG([QUOTE]) AS AVG_DAY_QUOTE
	,VAR([QUOTE]) AS VAR_DAY_QUOTE
	,VARP([QUOTE]) AS VARP_DAY_QUOTE
FROM [AP_FINANCE].[MASTER_DATA].[TICKER_HISTORY]
WHERE [TICKER_DATE] = '2015-01-01'
GROUP BY [TICKER]
GO

SELECT [TICKER]
      ,[COMPANY]
     ,[TICKER_DATE]
 	  ,AVG([QUOTE]) AS AVG_DAY_QUOTE
	  ,VAR([QUOTE]) AS VAR_DAY_QUOTE
	  ,VARP([QUOTE]) AS VARP_DAY_QUOTE
FROM [AP_FINANCE].[MASTER_DATA].[TICKER_HISTORY]
WHERE TICKER_DATE = '2015-12-05'
GROUP BY [TICKER],[COMPANY],[TICKER_DATE]
GO


/*************************************/
/* TASK 11 - VAR() & VARP() W/OVER() */
/*************************************/

/****************/
/* LISTING 9.15 */
/****************/

SELECT DISTINCT [TICKER],[TICKER_DATE]
	  ,AVG(ALL [QUOTE]) OVER (
		PARTITION BY [TICKER_DATE]
--		ORDER BY [QUOTE_HOUR]
		) AS AVG_DAY_QUOTE
	  ,VAR(ALL [QUOTE]) OVER (
		PARTITION BY [TICKER_DATE]
--		ORDER BY [QUOTE_HOUR]
		) AS VAR_DAY_QUOTE
	  ,VARP(ALL [QUOTE]) OVER (
		PARTITION BY [TICKER_DATE]
--		ORDER BY [QUOTE_HOUR]
		) AS VARP_DAY_QUOTE
FROM [AP_FINANCE].[MASTER_DATA].[TICKER_HISTORY]
WHERE YEAR(TICKER_DATE) = 2015
AND MONTH(TICKER_DATE) = 12
ORDER BY TICKER_DATE
GO

/**************************/
/* TASK 12 - STRING_AGG() */
/**************************/

/****************/
/* LISTING 9.16 */
/****************/

SELECT STRING_AGG([SYMBOL],',') + ' are the cash instruments traded'
FROM [TRADE].[TICKER_SYMBOLS]
WHERE [TRANSACTION_TYPE_CODE] = 'TT00001'
UNION ALL
SELECT STRING_AGG([SYMBOL],',') + ' are the equity instruments traded'
FROM [TRADE].[TICKER_SYMBOLS]
WHERE [TRANSACTION_TYPE_CODE] = 'TT00002'
UNION ALL
SELECT STRING_AGG([SYMBOL],',') + ' are the option instruments traded'
FROM [TRADE].[TICKER_SYMBOLS]
WHERE [TRANSACTION_TYPE_CODE] = 'TT00003'
UNION ALL
SELECT STRING_AGG([SYMBOL],',') + ' are the FX instruments traded'
FROM [TRADE].[TICKER_SYMBOLS]
WHERE [TRANSACTION_TYPE_CODE] = 'TT00004'
UNION ALL
SELECT STRING_AGG([SYMBOL],',') + ' are the swap instruments traded'
FROM [TRADE].[TICKER_SYMBOLS]
WHERE [TRANSACTION_TYPE_CODE] = 'TT00005'
UNION ALL
SELECT STRING_AGG([SYMBOL],',') + ' are the commodity instruments traded'
FROM [TRADE].[TICKER_SYMBOLS]
WHERE [TRANSACTION_TYPE_CODE] = 'TT00006'
GO

/***************************/
/* START HERE - 06-10-2022 */
/***************************/

/***********************************/
/* RECIPE 2 - ANALYTICAL FUNCTIONS */
/***********************************/

/****************/
/* LISTING 9.17 */
/****************/

DROP VIEW IF EXISTS TRADE.MONTHLY_GOLD_PERFORMANCE_REPORT
GO

CREATE VIEW TRADE.MONTHLY_GOLD_PERFORMANCE_REPORT
AS
SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,CWV.[CALENDAR_YEAR]		AS TRANS_YEAR
	,CWV.[MONTH_NAME]			AS TRANS_MONTH
	,CWV.[CALENDAR_MONTH]		AS TRANS_MONTH_NO
	,CWV.[QUARTER_NAME]			AS TRANS_QTR
	,CWV.[CALENDAR_YEAR_WEEK]	AS TRANS_WEEK
	,T.SYMBOL					AS TRANS_SYMBOL
    ,SUM(T.[TRANS_AMOUNT])	    AS SUM_TRANS_AMT
FROM [AP_FINANCE].[TRADE].[TRANSACTION] T WITH(NOLOCK)
JOIN [MASTER_DATA].[CALENDAR_WEEK_VIEW] CWV WITH(NOLOCK)
ON T.TRANS_DATE = CWV.[CALENDAR_DATE]
WHERE T.SYMBOL = 'GC=F'
GROUP BY T.[CUST_ID]
    ,T.[ACCT_NO]
	,CWV.[CALENDAR_YEAR]
	,CWV.[MONTH_NAME]
	,CWV.[CALENDAR_MONTH]
	,CWV.[QUARTER_NAME]
	,CWV.[CALENDAR_YEAR_WEEK] 
	,T.SYMBOL
GO

/****************/
/* LISTING 9.18 */
/****************/

CREATE OR ALTER VIEW [TRADE].[MONTHLY_GOLD_BUY_REPORT]
AS
SELECT   T.[CUST_ID],
         T.[ACCT_NO],
         CWV.[CALENDAR_YEAR] AS TRANS_YEAR,
         CWV.[MONTH_NAME] AS TRANS_MONTH,
         CWV.[CALENDAR_MONTH] AS TRANS_MONTH_NO,
         CWV.[QUARTER_NAME] AS TRANS_QTR,
         CWV.[CALENDAR_YEAR_WEEK] AS TRANS_WEEK,
         T.SYMBOL AS TRANS_SYMBOL,
		 T.BUY_SELL,
         SUM(T.[TRANS_AMOUNT]) AS SUM_TRANS_AMT
FROM     [AP_FINANCE].[TRADE].[TRANSACTION] AS T WITH (NOLOCK)
         INNER JOIN
         [MASTER_DATA].[CALENDAR_WEEK_VIEW] AS CWV WITH (NOLOCK)
         ON T.TRANS_DATE = CWV.[CALENDAR_DATE]
WHERE    T.SYMBOL = 'GC=F'
AND T.BUY_SELL = 'B'
GROUP BY T.[CUST_ID], T.[ACCT_NO], CWV.[CALENDAR_YEAR], CWV.[MONTH_NAME], 
CWV.[CALENDAR_MONTH], CWV.[QUARTER_NAME], CWV.[CALENDAR_YEAR_WEEK], T.SYMBOL,T.BUY_SELL;
GO

/****************/
/* LISTING 9.19 */
/****************/

USE [AP_FINANCE]
GO

CREATE OR ALTER VIEW [TRADE].[MONTHLY_GOLD_SELL_REPORT]
AS
SELECT   T.[CUST_ID],
         T.[ACCT_NO],
         CWV.[CALENDAR_YEAR] AS TRANS_YEAR,
         CWV.[MONTH_NAME] AS TRANS_MONTH,
         CWV.[CALENDAR_MONTH] AS TRANS_MONTH_NO,
         CWV.[QUARTER_NAME] AS TRANS_QTR,
         CWV.[CALENDAR_YEAR_WEEK] AS TRANS_WEEK,
         T.SYMBOL AS TRANS_SYMBOL,
		 T.BUY_SELL,
         SUM(T.[TRANS_AMOUNT]) AS SUM_TRANS_AMT
FROM     [AP_FINANCE].[TRADE].[TRANSACTION] AS T WITH (NOLOCK)
         INNER JOIN
         [MASTER_DATA].[CALENDAR_WEEK_VIEW] AS CWV WITH (NOL*OCK)
         ON T.TRANS_DATE = CWV.[CALENDAR_DATE]
WHERE    T.SYMBOL = 'GC=F'
AND T.BUY_SELL = 'S'
GROUP BY T.[CUST_ID], T.[ACCT_NO], CWV.[CALENDAR_YEAR], CWV.[MONTH_NAME], 
CWV.[CALENDAR_MONTH], CWV.[QUARTER_NAME], CWV.[CALENDAR_YEAR_WEEK], T.SYMBOL,T.BUY_SELL;
GO



/****************/
/* LISTING 9.18 */
/****************/

/************************/
/* TASK 1 - CUME_DIST() */
/************************/

SELECT [CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,[ACCT_TYPE_CODE]
      ,YEAR([POST_DATE]) AS [REPORTING_YEAR]
	  ,MONTH([POST_DATE]) AS [REPORTING_MONTH]
	  ,SUM(ACCT_BALANCE) AS SUM_ACCT_BLANCE
	  ,CUME_DIST() OVER(
	  PARTITION  BY 
		[CUST_ID] ,YEAR([POST_DATE])
	  ORDER BY SUM(ACCT_BALANCE) 
	  ) AS [CUME_DIST] 
FROM [AP_FINANCE].[TRADE].[ACCOUNT]
WHERE CUST_ID = 'C0000001'
AND YEAR([POST_DATE]) = 2015
AND ACCT_NAME = 'CASH ACCOUNT'
GROUP BY[CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,[ACCT_TYPE_CODE]
	  ,YEAR([POST_DATE])
	  ,MONTH([POST_DATE]) 
ORDER BY[CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,[ACCT_TYPE_CODE]
	  ,YEAR([POST_DATE])
	  ,MONTH([POST_DATE]) 
GO

/**************************/
/* TASK 2 - FIRST_VALUE() */
/**************************/

/****************/
/* LISTING 9.19 */
/****************/

SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_QTR
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
	,CASE WHEN T.[SUM_TRANS_AMT] > 0 
		THEN 'BOUGHT GOLD - CREDIT ACCOUNT'
		ELSE 'SOLD GOLD - DEBIT ACCOUNT'
	END AS TRADE
    ,T.[SUM_TRANS_AMT]	    AS CURRENT_WEEK
	,FIRST_VALUE(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
				RANGE BETWEEN UNBOUNDED PRECEDING 
					AND UNBOUNDED FOLLOWING
			) AS [TOP_TRADE]
FROM [TRADE].[MONTHLY_GOLD_PERFORMANCE_REPORT] T
WHERE T.CUST_ID = 'C0000001'
AND T.[TRANS_YEAR] IN(2015,2016)
AND T.ACCT_NO = 'A06C1'
AND T.TRANS_SYMBOL = 'GC=F'
AND T.[TRANS_QTR] = '2nd Quarter'
ORDER BY T.TRANS_YEAR
	,T.TRANS_MONTH_NO,T.TRANS_WEEK
GO

/*************************/
/* TASK 3 - LAST_VALUE() */
/*************************/

/****************/
/* LISTING 9.20 */
/****************/

SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_QTR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
	,CASE WHEN T.[SUM_TRANS_AMT] > 0 
		THEN 'BOUGHT GOLD - CREDIT ACCOUNT'
		ELSE 'SOLD GOLD - DEBIT ACCOUNT'
	END AS TRADE
    ,T.[SUM_TRANS_AMT]	    AS CURRENT_WEEK
	,FIRST_VALUE(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
			) AS [TOP_TRADE]
	,LAST_VALUE(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING
			) AS [BOTTOM_TRADE]
FROM [TRADE].[MONTHLY_GOLD_PERFORMANCE_REPORT] T
WHERE T.CUST_ID = 'C0000001'
AND T.[TRANS_YEAR] IN(2015,2016)
AND T.ACCT_NO = 'A06C1'
AND T.TRANS_SYMBOL = 'GC=F'
AND T.[TRANS_QTR] = '2nd Quarter'
ORDER BY T.TRANS_YEAR
	,T.TRANS_MONTH_NO,T.TRANS_WEEK
GO

/******************/
/* TASK 4 - LAG() */
/******************/

/****************/
/* LISTING 9.21 */
/****************/

SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_QTR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
	,T.BUY_SELL
    ,T.[SUM_TRANS_AMT]	    AS CURRENT_WEEK
	,LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) AS [LAST_WEEK]
	,CASE WHEN (LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			)) IS NULL THEN 0
		ELSE T.[SUM_TRANS_AMT] -
		LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) 
	END AS [CHANGE]
	,(
	T.[SUM_TRANS_AMT]	 - 
		CASE WHEN (LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			)) IS NULL THEN 0
		ELSE T.[SUM_TRANS_AMT] -
		LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) 
		END
		) / T.[SUM_TRANS_AMT] AS [% CHANGE]
FROM [TRADE].[MONTHLY_GOLD_BUY_REPORT] T
WHERE T.CUST_ID = 'C0000001'
AND T.[TRANS_YEAR] IN(2015,2016)
AND T.ACCT_NO = 'A06C1'
AND T.TRANS_SYMBOL = 'GC=F'
AND T.[TRANS_QTR]	= '2nd Quarter'
ORDER BY TRANS_MONTH_NO,TRANS_WEEK
GO

/********/
/* SELL */
/********/

SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_QTR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
	,T.BUY_SELL
    ,T.[SUM_TRANS_AMT]	    AS CURRENT_WEEK
	,LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) AS [LAST_WEEK]
	,CASE WHEN (LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			)) IS NULL THEN 0
		ELSE T.[SUM_TRANS_AMT] -
		LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) 
	END AS [CHANGE]
	,(
	T.[SUM_TRANS_AMT]	 - 
		CASE WHEN (LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			)) IS NULL THEN 0
		ELSE T.[SUM_TRANS_AMT] -
		LAG(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) 
		END
		) / T.[SUM_TRANS_AMT] AS [% CHANGE]
FROM [TRADE].[MONTHLY_GOLD_SELL_REPORT] T
WHERE T.CUST_ID = 'C0000001'
AND T.[TRANS_YEAR] IN(2015,2016)
AND T.ACCT_NO = 'A06C1'
AND T.TRANS_SYMBOL = 'GC=F'
AND T.[TRANS_QTR]	= '2nd Quarter'
ORDER BY TRANS_MONTH_NO,TRANS_WEEK
GO

/*******************/
/* TASK 5 - LEAD() */
/*******************/



/***********************/
/* LISTING 9.22  - BUY */ 
/***********************/

SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_QTR
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
	,T.BUY_SELL
	,CASE WHEN T.[SUM_TRANS_AMT] > 0 THEN 'BOUGHT GOLD - CREDIT ACCOUNT'
		ELSE 'SOLD GOLD - DEBIT ACCOUNT'
	END AS TRADE
    ,T.[SUM_TRANS_AMT]	    AS CURRENT_WEEK
	,LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) AS [NEXT_WEEK]
	,CASE WHEN (LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			)) IS NULL THEN 0
		ELSE T.[SUM_TRANS_AMT] -
		LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) 
	END AS [CHANGE]
	,(
	T.[SUM_TRANS_AMT]	 - 
		CASE WHEN (LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			)) IS NULL THEN 0
		ELSE T.[SUM_TRANS_AMT] -
		LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) 
		END
		) / T.[SUM_TRANS_AMT] AS [% CHANGE]
FROM [TRADE].[MONTHLY_GOLD_BUY_REPORT] T
WHERE T.CUST_ID = 'C0000001'
AND T.[TRANS_YEAR] IN(2015,2016)
AND T.ACCT_NO = 'A06C1'
AND T.[TRANS_QTR]	= '2nd Quarter'
ORDER BY TRANS_MONTH_NO,TRANS_WEEK
GO

/****************/
/* LISTING 9.22 */ 
/****************/

/********/
/* SELL */
/********/

SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_QTR
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
	,T.BUY_SELL
	,CASE WHEN T.[SUM_TRANS_AMT] > 0 THEN 'BOUGHT GOLD - CREDIT ACCOUNT'
		ELSE 'SOLD GOLD - DEBIT ACCOUNT'
	END AS TRADE
    ,T.[SUM_TRANS_AMT]	    AS CURRENT_WEEK
	,LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) AS [NEXT_WEEK]
	,CASE WHEN (LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			)) IS NULL THEN 0
		ELSE T.[SUM_TRANS_AMT] -
		LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) 
	END AS [CHANGE]
	,(
	T.[SUM_TRANS_AMT]	 - 
		CASE WHEN (LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			)) IS NULL THEN 0
		ELSE T.[SUM_TRANS_AMT] -
		LEAD(T.[SUM_TRANS_AMT]) OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) 
		END
		) / T.[SUM_TRANS_AMT] AS [% CHANGE]
FROM [TRADE].[MONTHLY_GOLD_SELL_REPORT] T
WHERE T.CUST_ID = 'C0000001'
AND T.[TRANS_YEAR] IN(2015,2016)
AND T.ACCT_NO = 'A06C1'
AND T.[TRANS_QTR]	= '2nd Quarter'
ORDER BY TRANS_MONTH_NO,TRANS_WEEK
GO

/***************************/
/* TASK 6 - PERCENT_RANK() */
/***************************/

/****************/
/* LISTING 9.23 */
/****************/

SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_QTR
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
    ,T.[SUM_TRANS_AMT]	    AS SUM_TRANS_AMT
	,PERCENT_RANK() OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.[SUM_TRANS_AMT] DESC
			) AS [PERCENT_RANK]
FROM [TRADE].[MONTHLY_GOLD_PERFORMANCE_REPORT] T
WHERE T.CUST_ID = 'C0000001'
AND T.[TRANS_YEAR] = 2015
AND T.ACCT_NO = 'A06C1'
AND T.TRANS_SYMBOL = 'GC=F'
AND T.[TRANS_QTR]	= '2nd Quarter'
ORDER BY TRANS_MONTH_NO,TRANS_WEEK
GO

/**************************************************/
/* TASK 7 - PERCENTILE_CONT() & PERCENTILE_DISC() */
/**************************************************/

/****************/
/* LISTING 9.24 */
/****************/

/***********************************/
/* look at cash account sums first */
/***********************************/

SELECT YEAR([POST_DATE]) AS POST_YEAR
	,MONTH([POST_DATE]) AS POST_MONTH
      ,[CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,SUM([ACCT_BALANCE]) AS ACCT_BALANCE
FROM [AP_FINANCE].[TRADE].[ACCOUNT]
WHERE CUST_ID = 'C0000005'
AND YEAR([POST_DATE]) = 2012
AND ACCT_NO = 'A01C5'
GROUP BY YEAR([POST_DATE])
	  ,MONTH([POST_DATE])
      ,[CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
ORDER BY YEAR([POST_DATE]),
	MONTH([POST_DATE])
GO

/*********************/
/* PERCENTILE_CONT() */
/*********************/

/****************/
/* LISTING 9.25 */
/****************/

SELECT DISTINCT YEAR([POST_DATE]) AS POST_YEAR
	,MONTH([POST_DATE]) AS POST_MONTH
      ,[CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,SUM([ACCT_BALANCE]) OVER(
		PARTITION BY YEAR([POST_DATE]),MONTH([POST_DATE])
		) AS ACCT_BALANCE
	  ,PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY ([ACCT_BALANCE]) DESC)
	 OVER (
		PARTITION BY 
			YEAR([POST_DATE]),MONTH([POST_DATE]) 
	) AS [PERCENTILE_CONT]
FROM [AP_FINANCE].[TRADE].[ACCOUNT]
WHERE CUST_ID = 'C0000005'
AND YEAR([POST_DATE]) = 2012
AND ACCT_NO = 'A01C5'
ORDER BY YEAR([POST_DATE]),
	MONTH([POST_DATE])
GO

/*********************/
/* PERCENTILE_DISC() */
/*********************/

/****************/
/* LISTING 9.26 */
/****************/

SELECT DISTINCT YEAR([POST_DATE]) AS POST_YEAR
	,MONTH([POST_DATE]) AS POST_MONTH
      ,[CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,SUM([ACCT_BALANCE]) OVER(
		PARTITION BY YEAR([POST_DATE]),MONTH([POST_DATE])
		) AS ACCT_BALANCE
	  ,PERCENTILE_DISC(0.5) WITHIN GROUP (ORDER BY ([ACCT_BALANCE]) DESC)
	 OVER (
		PARTITION BY 
			YEAR([POST_DATE]),MONTH([POST_DATE]) 
	) AS [PERCENTILE_DISC]
FROM [AP_FINANCE].[TRADE].[ACCOUNT]
WHERE CUST_ID = 'C0000005'
AND YEAR([POST_DATE]) = 2012
AND ACCT_NO = 'A01C5'
ORDER BY YEAR([POST_DATE]),
	MONTH([POST_DATE])
GO


/********************************/
/* RECIPE 3 - RANKING FUNCTIONS */
/********************************/

/***************/
/* HELPER VIEW */
/***************/

DROP VIEW IF EXISTS TRADE.CUSTOMER_ACCOUNT_EOM_BALANCE
GO

CREATE VIEW TRADE.CUSTOMER_ACCOUNT_EOM_BALANCE
AS
SELECT YEAR([POST_DATE]) AS YEAR_END
	,MONTH([POST_DATE]) AS MONTH_END
	,[CUST_ID]
	,[ACCT_NAME]
    ,SUM([ACCT_BALANCE]) AS EOM_BALANCE
FROM [AP_FINANCE].[TRADE].[ACCOUNT]
GROUP BY YEAR([POST_DATE]) 
	,MONTH([POST_DATE]) 
	,[CUST_ID]
	,[ACCT_NAME]
/* uncomment for debugging
ORDER BY YEAR([POST_DATE])
	,MONTH([POST_DATE])
	,CUST_ID
	,[ACCT_NAME]
*/
GO

/**********************************/
/* TASK 1 - RANK() & DENSE_RANK() */
/**********************************/

/****************/
/* LISTING 9.27 */
/****************/

SELECT *
	,RANK() OVER (ORDER BY TRANS_AMOUNT DESC) AS RANK
	,DENSE_RANK() OVER (ORDER BY TRANS_AMOUNT DESC) AS DENSE_RANK
FROM (
SELECT TOP 20 
	T.CUST_ID
	,T.[SYMBOL]
    ,TRANS_AMOUNT
FROM [AP_FINANCE].[TRADE].[TRANSACTION] T WITH (NOLOCK)
WHERE YEAR([TRANS_DATE]) = 2015
) TR
GO

/*********/
/* BONUS */
/*********/

USE [AP_FINANCE]
GO

SELECT [YEAR_END],[MONTH_END]
      ,[CUST_ID]
      ,[ACCT_NAME]
      ,[EOM_BALANCE] AS EOY_ACCT_BALANCE
	  ,RANK() OVER (
	   PARTITION BY MONTH_END
		ORDER BY [MONTH_END],[EOM_BALANCE] DESC
		) AS TRANS_RANK
	  ,DENSE_RANK() OVER (
	   PARTITION BY MONTH_END
		ORDER BY [MONTH_END],[EOM_BALANCE] DESC
		) AS DENSE_TRANS_RANK
FROM [TRADE].[CUSTOMER_ACCOUNT_EOM_BALANCE]
WHERE YEAR_END = 2014
AND CUST_ID = 'C0000001'
GO


SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_QTR
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
    ,T.[SUM_TRANS_AMT]	    AS SUM_TRANS_AMT
	,RANK() OVER (ORDER BY T.[SUM_TRANS_AMT] DESC) AS [RANK]
	,DENSE_RANK() OVER (ORDER BY T.[SUM_TRANS_AMT] DESC) AS [DENSE_RANK]
FROM [TRADE].[MONTHLY_GOLD_PERFORMANCE_REPORT] T
WHERE T.CUST_ID = 'C0000005'
AND T.[TRANS_YEAR] = 2015
AND T.ACCT_NO = 'A06C5'
AND T.[TRANS_SYMBOL] = 'GC=F'
AND T.[TRANS_QTR]	= '2nd Quarter'
GO

/********************/
/* TASK 2 - NTILE() */
/********************/

/****************/
/* LISTING 9.28 */
/****************/

SELECT TR.TRANS_YEAR,TR.CUST_ID,TR.SYMBOL,TR.TRANS_AMOUNT
	,NTILE(4) OVER(
	   ORDER BY TR.TRANS_YEAR ASC,TR.TRANS_AMOUNT DESC
	  ) AS [TOP 10 BUCKET] 
FROM (
SELECT TOP 10 
	YEAR(T.[TRANS_DATE]) AS TRANS_YEAR
	,T.CUST_ID
	,T.[SYMBOL]
    ,TRANS_AMOUNT
FROM [AP_FINANCE].[TRADE].[TRANSACTION] T WITH (NOLOCK)
WHERE YEAR([TRANS_DATE]) = 2012
UNION ALL
SELECT TOP 10 
	YEAR(T.[TRANS_DATE]) AS TRANS_YEAR
	,T.CUST_ID
	,T.[SYMBOL]
    ,TRANS_AMOUNT
FROM [AP_FINANCE].[TRADE].[TRANSACTION] T WITH (NOLOCK)
WHERE YEAR([TRANS_DATE]) = 2013
UNION ALl
SELECT TOP 10 
	YEAR(T.[TRANS_DATE]) AS TRANS_YEAR
	,T.CUST_ID
	,T.[SYMBOL]
    ,TRANS_AMOUNT
FROM [AP_FINANCE].[TRADE].[TRANSACTION] T WITH (NOLOCK)
WHERE YEAR([TRANS_DATE]) = 2014
UNION ALL
SELECT TOP 10 
	YEAR(T.[TRANS_DATE]) AS TRANS_YEAR
	,T.CUST_ID
	,T.[SYMBOL]
    ,TRANS_AMOUNT
FROM [AP_FINANCE].[TRADE].[TRANSACTION] T WITH (NOLOCK)
WHERE YEAR([TRANS_DATE]) = 2015
) TR
GO

/*********/
/* BONUS */
/*********/

SELECT [YEAR_END],[MONTH_END]
      ,[CUST_ID]
      ,[ACCT_NAME]
      ,[EOM_BALANCE] AS EOY_ACCT_BALANCE
	  ,RANK() OVER (
	   PARTITION BY MONTH_END
		ORDER BY [MONTH_END],[EOM_BALANCE] DESC
		) AS TRANS_RANK
	  ,DENSE_RANK() OVER (
	   PARTITION BY MONTH_END
		ORDER BY [MONTH_END],[EOM_BALANCE] DESC
		) AS DENSE_TRANS_RANK
	  ,NTILE(12) OVER (
	   PARTITION BY YEAR_END
		ORDER BY [MONTH_END],[EOM_BALANCE] DESC
		) AS NTILE_TRANS
FROM [TRADE].[CUSTOMER_ACCOUNT_EOM_BALANCE]
WHERE YEAR_END = 2014
AND CUST_ID = 'C0000001'
GO


SELECT [CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,[ACCT_TYPE_CODE]
      ,YEAR([POST_DATE]) AS [REPORTING_YEAR]
	  ,MONTH([POST_DATE]) AS [REPORTING_MONTH]
	  ,SUM(ACCT_BALANCE) AS SUM_ACCT_BLANCE
	  ,NTILE(12) OVER(
	  PARTITION BY
		YEAR([POST_DATE]),MONTH([POST_DATE]) 
	  ORDER BY SUM(ACCT_BALANCE)
	  ) AS [NTILE] 
FROM [AP_FINANCE].[TRADE].[ACCOUNT]
WHERE CUST_ID = 'C0000001'
GROUP BY[CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,[ACCT_TYPE_CODE]
	  ,YEAR([POST_DATE])
	  ,MONTH([POST_DATE]) 
GO

/*************************/
/* TASK 3 - ROW_NUMBER() */
/*************************/

/****************/
/* LISTING 9.29 */
/****************/

SELECT 	T.[CUST_ID]
    ,T.[ACCT_NO]
	,T.TRANS_YEAR
	,T.TRANS_MONTH
	,T.TRANS_MONTH_NO
	,T.TRANS_QTR
	,T.TRANS_WEEK
	,T.TRANS_SYMBOL
    ,T.[SUM_TRANS_AMT]	    AS SUM_TRANS_AMT
	,ROW_NUMBER() OVER (
			PARTITION BY T.TRANS_YEAR,T.TRANS_MONTH
			ORDER BY T.TRANS_MONTH_NO,T.TRANS_WEEK ASC
	) AS [ROW_NUMBER]
FROM [TRADE].[MONTHLY_GOLD_PERFORMANCE_REPORT] T
WHERE T.CUST_ID = 'C0000001'
AND T.[TRANS_YEAR] = 2015
AND T.ACCT_NO = 'A06C1'
AND T.[TRANS_QTR]	= '2nd Quarter'
GO