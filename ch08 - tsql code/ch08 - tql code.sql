USE [AP_FINANCE]
GO

/***********************************************/ 
/* CREATE DATE: 05/18/2022                     */
/* MODIFICATION HISTORY                        */
/* 05/18/2022                                  */
/* 1.) simplified transaction generator        */
/* 2.) added all acount types to account table */
/***********************************************/ 

/************/
/* CALENDAR */
/************/

TRUNCATE TABLE [MASTER_DATA].[CALENDAR]
GO

DECLARE @StartDate DATE;
DECLARE @StopDate DATE;
DECLARE @CurrentDate DATE;

SET @StartDate = '01/01/2012'
SET @StopDate = '12/31/2015'

SET @CurrentDate = @StartDate

WHILE (@CurrentDate <= @StopDate)
BEGIN

INSERT INTO [MASTER_DATA].[CALENDAR]
VALUES (
CONVERT(INT,
(
CONVERT(VARCHAR,YEAR(@CurrentDate)) +
CONVERT(VARCHAR,DATEPART(qq,@CurrentDate)) +
CONVERT(VARCHAR,MONTH(@CurrentDate)) +
CONVERT(VARCHAR,DAY(@CurrentDate))
)
),
YEAR(@CurrentDate),
DATEPART(qq,@CurrentDate),
MONTH(@CurrentDate),
@CurrentDate
);

SET @CurrentDate = DATEADD(dd,1,@CurrentDate);
END
GO

SELECT * FROM [MASTER_DATA].[CALENDAR]
GO

/************/
/* CUSTOMER */
/************/

TRUNCATE TABLE [MASTER_DATA].[CUSTOMER]
GO


INSERT INTO MASTER_DATA.CUSTOMER
VALUES
('C0000001','Smith','John',250000.00,'150K - 250K'),
('C0000002','Brown','Karen',125000.00,'100K - 150K'),
('C0000003','Carruthers','Sherlock',550000.00,'500K - 1000K'),
('C0000004','Balducci','Mario',750000.00,'500K - 1000K'),
('C0000005','Escargot','Pierre',250000.00,'150K - 250K');
GO

SELECT * FROM MASTER_DATA.CUSTOMER
GO

/****************/
/* ACCOUNT TYPE */
/****************/

TRUNCATE TABLE [MASTER_DATA].[ACCOUNT_TYPE]
GO

INSERT INTO [MASTER_DATA].[ACCOUNT_TYPE]
VALUES 
	('AT00001','CASH'),
	('AT00002','EQUITY'),
	('AT00003','OPTION'),
	('AT00004','FX'),
	('AT00005','SWAP'),
	('AT00006','COMMODITY');
GO

/********************/
/* TRANSACTION TYPE */
/********************/


TRUNCATE TABLE [MASTER_DATA].[TRANSACTION_TYPE]
GO

INSERT INTO [MASTER_DATA].[TRANSACTION_TYPE]
VALUES 
	('TT00001','CASH'),
	('TT00002','EQUITY'),
	('TT00003','OPTION'),
	('TT00004','FX'),
	('TT00005','SWAP'),
	('TT00006','COMMODITY');
GO

/****************************/
/* TRANSACTION_ACCOUNT_TYPE */
/****************************/

CREATE TABLE [MASTER_DATA].[TRANSACTION_ACCOUNT_TYPE](
	[TRANS_ACCT_TYPE_KEY] [int] IDENTITY(1,1) NOT NULL,
	[TRANS_TYPE_CODE] [varchar](32) NOT NULL,
	[ACCT_TYPE_CODE] [varchar](32) NOT NULL,
	[TYPE_CODE_DESCRIPTION] [varchar](256) NOT NULL
) ON [AP_FINANCE_FG]
GO

TRUNCATE TABLE [MASTER_DATA].[TRANSACTION_ACCOUNT_TYPE]
GO

INSERT INTO [MASTER_DATA].[TRANSACTION_ACCOUNT_TYPE]
VALUES 
	('TT00001','AT00001','CASH'),
	('TT00002','AT00002','EQUITY'),
	('TT00003','AT00003','OPTION'),
	('TT00004','AT00004','FX'),
	('TT00005','AT00005','SWAP'),
	('TT00006','AT00006','COMMODITY');
GO

CREATE OR ALTER VIEW MASTER_DATA.TRANSACTION_TYPE_VIEW
AS
SELECT [TRANS_ACCT_TYPE_KEY]
      ,[TRANS_TYPE_CODE]
      ,[TYPE_CODE_DESCRIPTION]
FROM [MASTER_DATA].[TRANSACTION_ACCOUNT_TYPE]
GO

CREATE OR ALTER VIEW MASTER_DATA.ACCOUNT_TYPE_VIEW
AS
SELECT [TRANS_ACCT_TYPE_KEY]
      ,[ACCT_TYPE_CODE]
      ,[TYPE_CODE_DESCRIPTION]
FROM [MASTER_DATA].[TRANSACTION_ACCOUNT_TYPE]
GO

/***************/
/* TRANSACTION */
/***************/

TRUNCATE TABLE [TRADE].[TRANSACTION]
GO

INSERT INTO [TRADE].[TRANSACTION]
-- GENERATE BUY TRANSACTIONS
SELECT CAL.[CALENDAR_DATE] AS TRANSACTION_DATE,
	TS.[SYMBOL],
--	TT.[TRANS_TYPE_DESCRIPTION],
	CONVERT(INT,CRYPT_GEN_RANDOM(1)--/2
	) AS [PRICE],
	CONVERT(INT,CRYPT_GEN_RANDOM(1)/5
	) AS [QTY],
	0.0 AS [TRANS_AMOUNT],
	CUST.CUST_ID,
	A.[PRTF_NO],
    A.[ACCT_NO],
	CASE	-- check if a cash deposit	
		WHEN TS.[TRANSACTION_TYPE_CODE] = 'TT00001' THEN 'D' 
		ELSE 'B'
	END AS TRADE_TYPE,
	TS.[TRANSACTION_TYPE_CODE]
FROM [TRADE].[TICKER_SYMBOLS] TS
JOIN [MASTER_DATA].[TRANSACTION_TYPE] TT
ON TS.TRANSACTION_TYPE_CODE = TT.TRANS_TYPE_CODE
CROSS JOIN [MASTER_DATA].[CALENDAR] CAL
CROSS JOIN [MASTER_DATA].[CUSTOMER] CUST
JOIN (
SELECT DISTINCT
      [CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[ACCOUNT]
) A
ON TT.TRANS_TYPE_CODE = REPLACE(A.[ACCT_TYPE_CODE],'A','T')
AND A.CUST_ID = CUST.CUST_ID
UNION ALL
-- GENERATE SELL TRANSACTIONS, 540,570
SELECT CAL.[CALENDAR_DATE] AS TRANSACTION_DATE,
	TS.[SYMBOL],
--	TT.[TRANS_TYPE_DESCRIPTION],
	CONVERT(INT,CRYPT_GEN_RANDOM(1)/2
	) AS [PRICE],
	CONVERT(INT,CRYPT_GEN_RANDOM(1)/5
	) AS [QTY],
	0.0 AS [TRANS_AMOUNT],
	CUST.CUST_ID,
	A.[PRTF_NO],
    A.[ACCT_NO],
	CASE -- check if a cash withdrawel	
		WHEN TS.[TRANSACTION_TYPE_CODE] = 'TT00001' THEN 'W' 
		ELSE 'S'
	END AS TRADE_TYPE,
	TS.[TRANSACTION_TYPE_CODE]
FROM [TRADE].[TICKER_SYMBOLS] TS
JOIN [MASTER_DATA].[TRANSACTION_TYPE] TT
ON TS.TRANSACTION_TYPE_CODE = TT.TRANS_TYPE_CODE
CROSS JOIN [MASTER_DATA].[CALENDAR] CAL
CROSS JOIN [MASTER_DATA].[CUSTOMER] CUST
JOIN (
SELECT DISTINCT
      [CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[ACCOUNT]
) A
ON TT.TRANS_TYPE_CODE = REPLACE(A.[ACCT_TYPE_CODE],'A','T')
AND A.CUST_ID = CUST.CUST_ID
ORDER BY CUST.CUST_ID,CAL.CALENDAR_DATE
GO

-- some random prices set to 0 so set to 115.00

UPDATE [TRADE].[TRANSACTION]
	SET [PRICE] = 115.00
	WHERE [PRICE] = 0
GO

-- 6 seconds
UPDATE [TRADE].[TRANSACTION]
	SET [TRANS_AMOUNT] = 
	CASE 
		WHEN [BUY_SELL] = 'B' THEN ([QUANTITY] * [PRICE])
		WHEN [BUY_SELL] = 'D' THEN ([QUANTITY] * [PRICE])
		WHEN [BUY_SELL] = 'W' THEN (-1 * [QUANTITY] * [PRICE])
		WHEN [BUY_SELL] = 'S' THEN (-1 * [QUANTITY] * [PRICE])
	END
GO

/************************************************/
/* A SELL GENERATES A DEPOSIT INTO CASH ACCOUNT */
/************************************************/

INSERT INTO [AP_FINANCE].[TRADE].[TRANSACTION]
SELECT [TRANS_DATE]
      ,'JPST' AS [SYMBOL]
      ,ABS([TRANS_AMOUNT]) AS [PRICE]
      ,1 AS [QUANTITY]
      ,ABS([TRANS_AMOUNT])
      ,[CUST_ID]
      ,[PORTFOLIO_NO]
      ,[ACCT_NO]
      ,'D' AS [BUY_SELL]
      ,'TT00001' AS [TRANS_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[TRANSACTION]
  WHERE BUY_SELL = 'S'
  GO

/**************************************************/
/* A BUY GENERATES A WITHDRAWAL FROM CASH ACCOUNT */
/**************************************************/

INSERT INTO [AP_FINANCE].[TRADE].[TRANSACTION]
SELECT [TRANS_DATE]
      ,'JPST' AS [SYMBOL]
      ,[TRANS_AMOUNT] AS [PRICE]
      ,1 AS [QUANTITY]
     -- ,ABS([TRANS_AMOUNT])
	  ,-1 * [TRANS_AMOUNT]
      ,[CUST_ID]
      ,[PORTFOLIO_NO]
      ,[ACCT_NO]
      ,'W' AS [BUY_SELL]
      ,'TT00001' AS [TRANS_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[TRANSACTION]
  WHERE BUY_SELL = 'B'
GO

SELECT 'BUY' AS TYPE,SUM(TRANS_AMOUNT) AS TOTAL_BUYS
FROM [TRADE].[TRANSACTION]
WHERE BUY_SELL = 'B'
UNION ALL
SELECT  'SELL' AS TYPE,SUM(TRANS_AMOUNT) AS TOTAL_SELL
FROM [TRADE].[TRANSACTION]
WHERE BUY_SELL = 'S'
UNION ALL
SELECT  'WITHDRAW' AS TYPE,SUM(TRANS_AMOUNT) AS TOTAL_WITHDRAWALS
FROM [TRADE].[TRANSACTION]
WHERE BUY_SELL = 'W'
UNION ALL
SELECT 'DEPOSIT' AS TYPE, SUM(TRANS_AMOUNT) AS TOTAL_DEPOSITS
FROM [TRADE].[TRANSACTION]
WHERE BUY_SELL = 'D'
GO

SELECT  *
FROM [TRADE].[TRANSACTION]
WHERE TRANS_AMOUNT > 0
AND BUY_SELL = 'W'
GO

/***********/
/* ACCOUNT */
/***********/

/***********/
/* ACCOUNT */
/***********/

/*
ACCT_TYPE_KEY	ACCT_TYPE_CODE	ACCT_TYPE_NAME
1	AT00001	CASH
2	AT00002	EQUITY
3	AT00003	OPTION
4	AT00004	FX
5	AT00005	SWAP
6	AT00006	COMMODITY
*/

-- INITIAL DEPOSITS

TRUNCATE TABLE  [TRADE].[ACCOUNT]
GO

INSERT INTO  [TRADE].[ACCOUNT]
VALUES
-- CASH
('C0000001','P01C1','A01C1','CASH ACCOUNT','AT00001',1000000.00,'2011-12-31'),
('C0000002','P01C2','A01C2','CASH ACCOUNT','AT00001',1000000.00,'2011-12-31'),
('C0000003','P01C3','A01C3','CASH ACCOUNT','AT00001',1000000.00,'2011-12-31'),
('C0000004','P01C4','A01C4','CASH ACCOUNT','AT00001',1000000.00,'2011-12-31'),
('C0000005','P01C5','A01C5','CASH ACCOUNT','AT00001',1000000.00,'2011-12-31'),
-- EQUITY
('C0000001','P01C1','A02C1','EQUITY ACCOUNT','AT00002',1000000.00,'2011-12-31'),
('C0000002','P01C2','A02C2','EQUITY ACCOUNT','AT00002',1000000.00,'2011-12-31'),
('C0000003','P01C3','A02C3','EQUITY ACCOUNT','AT00002',1000000.00,'2011-12-31'),
('C0000004','P01C4','A02C4','EQUITY ACCOUNT','AT00002',1000000.00,'2011-12-31'),
('C0000005','P01C5','A02C5','EQUITY ACCOUNT','AT00002',1000000.00,'2011-12-31'),

-- OPTION
('C0000001','P01C1','A03C1','OPTION ACCOUNT','AT00003',1000000.00,'2011-12-31'),
('C0000002','P01C2','A03C2','OPTION ACCOUNT','AT00003',1000000.00,'2011-12-31'),
('C0000003','P01C3','A03C3','OPTIONSH ACCOUNT','AT00003',1000000.00,'2011-12-31'),
('C0000004','P01C4','A03C4','OPTION ACCOUNT','AT00003',1000000.00,'2011-12-31'),
('C0000005','P01C5','A03C5','OPTION ACCOUNT','AT00003',1000000.00,'2011-12-31'),
-- FX
('C0000001','P01C1','A04C1','FX ACCOUNT','AT00004',1000000.00,'2011-12-31'),
('C0000002','P01C2','A04C2','FX ACCOUNT','AT00004',1000000.00,'2011-12-31'),
('C0000003','P01C3','A04C3','FX ACCOUNT','AT00004',1000000.00,'2011-12-31'),
('C0000004','P01C4','A04C4','FX ACCOUNT','AT00004',1000000.00,'2011-12-31'),
('C0000005','P01C5','A04C5','FX ACCOUNT','AT00004',1000000.00,'2011-12-31'),
-- SWAP
('C0000001','P01C1','A05C1','SWAP ACCOUNT','AT00005',1000000.00,'2011-12-31'),
('C0000002','P01C2','A05C2','SWAP ACCOUNT','AT00005',1000000.00,'2011-12-31'),
('C0000003','P01C3','A05C3','SWAP ACCOUNT','AT00005',1000000.00,'2011-12-31'),
('C0000004','P01C4','A05C4','SWAP ACCOUNT','AT00005',1000000.00,'2011-12-31'),
('C0000005','P01C5','A05C5','SWAP ACCOUNT','AT00005',1000000.00,'2011-12-31'),
-- COMMODITY
('C0000001','P01C1','A06C1','COMMODITY ACCOUNT','AT00006',1000000.00,'2011-12-31'),
('C0000002','P01C2','A06C2','COMMODITY ACCOUNT','AT00006',1000000.00,'2011-12-31'),
('C0000003','P01C3','A06C3','COMMODITY ACCOUNT','AT00006',1000000.00,'2011-12-31'),
('C0000004','P01C4','A06C4','COMMODITY ACCOUNT','AT00006',1000000.00,'2011-12-31'),
('C0000005','P01C5','A06C5','COMMODITY ACCOUNT','AT00006',1000000.00,'2011-12-31');
GO

SELECT * FROM [TRADE].[ACCOUNT]
GO

/********************/
/* SUBSEQUENT LOADS */
/********************/

--TRUNCATE TABLE [TRADE].[ACCOUNT]
--GO

DELETE FROM [TRADE].[ACCOUNT]
WHERE YEAR(POST_DATE) <> 2011
GO

INSERT INTO [TRADE].[ACCOUNT]
SELECT 
      T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
	  ,ACCT2.[ACCT_NAME]
	--  ,[SYMBOL]
      ,REPLACE(T.[TRANS_TYPE_CODE],'TT','AT') AS [ACCT_TYPE_CODE]
	  ,SUM(T.[TRANS_AMOUNT])
	  ,EOMONTH(T.[TRANS_DATE]) AS [POST_DATE]
FROM [TRADE].[TRANSACTION] T
JOIN (
	SELECT DISTINCT
		[CUST_ID], 
		[PRTF_NO], 
		[ACCT_NO], 
		[ACCT_NAME], 
		[ACCT_TYPE_CODE] 
	FROM [TRADE].[ACCOUNT]
	WHERE YEAR(POST_DATE) = 2011
	) ACCT2
ON T.ACCT_NO = ACCT2.[ACCT_NO]
GROUP BY
      T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
	  ,ACCT2.[ACCT_NAME]
	  ,T.[TRANS_TYPE_CODE]
	  ,[SYMBOL]
	  ,T.TRANS_DATE
ORDER BY
      T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
 GO

 /****************/
 /* CHECK IT OUT */
 /****************/

 SELECT [CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,[ACCT_TYPE_CODE]
	  ,YEAR([POST_DATE]) AS [POST YEAR]
	  ,MONTH([POST_DATE]) AS [POST MONTH]
      ,SUM([ACCT_BALANCE]) MONTHLY_BALANCE
FROM [AP_FINANCE].[TRADE].[ACCOUNT]
GROUP BY [CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,[ACCT_TYPE_CODE]
	  ,[POST_DATE]
ORDER BY
	  [CUST_ID]
      ,[PRTF_NO]
      ,[ACCT_NO]
      ,[ACCT_NAME]
      ,[ACCT_TYPE_CODE]
	  ,YEAR([POST_DATE]) 
	  ,MONTH([POST_DATE])
GO

/*************/
/* PORTFOLIO */
/*************/

TRUNCATE TABLE [TRADE].[PORTFOLIO]
GO

INSERT INTO [TRADE].[PORTFOLIO]
SELECT YEAR(A.[POST_DATE])
	  ,MONTH(A.[POST_DATE])
      ,A.[CUST_ID]
      ,A.[PRTF_NO]
	  ,A.ACCT_NAME + ' - FINANCIAL PORTFOLIO'
	  ,SUM(A.[ACCT_BALANCE])
	  ,EOMONTH(A.[POST_DATE]) AS [SWEEP_DATE]
FROM  [TRADE].[ACCOUNT] A
GROUP BY
      A.[CUST_ID]
      ,A.[PRTF_NO]
      ,A.[ACCT_NO]
	  ,A.ACCT_NAME
      ,A.[ACCT_TYPE_CODE]
	  ,A.[POST_DATE]
ORDER BY A.[POST_DATE]
      ,A.[CUST_ID]
      ,A.[PRTF_NO]
      ,A.[ACCT_NO]
	  ,A.ACCT_NAME
      ,A.[ACCT_TYPE_CODE]
	  GO

/**********************/
/* VALIDATION QUERIES */
/**********************/

SELECT [YEAR],
	[MONTH],
	[CUST_ID], 
	[PORTFOLIO_NO],
	[PORTFOLIO],
	SUM([VALUE]) AS MONTHLY_VALUE
FROM [TRADE].[PORTFOLIO]
WHERE YEAR = 2015 AND MONTH = 12
GROUP BY [YEAR],
	[MONTH],
	[CUST_ID], 
	[PORTFOLIO_NO],
	[PORTFOLIO]
ORDER BY
	CUST_ID,PORTFOLIO_NO,[YEAR],[MONTH]
GO	 

SELECT * FROM [TRADE].[PORTFOLIO]
WHERE YEAR = 2013 AND CUST_ID = 'C0000001'
AND DAY(SWEEP_DATE) = DAY(EOMONTH(SWEEP_DATE))
AND YEAR = 2013
AND PORTFOLIO = 'CASH ACCOUNT - FINANCIAL PORTFOLIO'
ORDER BY [YEAR],[MONTH]
GO

SELECT P.[YEAR], 
	CV.QUARTER_NAME,
	CV.[MONTH_ABBREV], 
	P.[CUST_ID], 
	P.[PORTFOLIO_NO], 
	P.[PORTFOLIO], 
	P.[VALUE], 
	P.[SWEEP_DATE] 
FROM [TRADE].[PORTFOLIO] P
JOIN [MASTER_DATA].[CALENDAR_VIEW] CV
ON P.SWEEP_DATE = CV.CALENDAR_DATE
WHERE P.YEAR = 2013 AND P.CUST_ID = 'C0000001'
AND DAY(P.SWEEP_DATE) = DAY(EOMONTH(P.SWEEP_DATE))
AND P.YEAR = 2013
AND P.PORTFOLIO = 'FX ACCOUNT - FINANCIAL PORTFOLIO'
GO

SELECT P.[YEAR], 
	CV.QUARTER_NAME,
	CV.[MONTH_ABBREV], 
	P.[CUST_ID], 
	P.[PORTFOLIO_NO], 
	P.[PORTFOLIO], 
	P.[VALUE], 
	P.[SWEEP_DATE] 
FROM [TRADE].[PORTFOLIO] P
JOIN [MASTER_DATA].[CALENDAR_VIEW] CV
ON P.SWEEP_DATE = CV.CALENDAR_DATE
WHERE P.YEAR = 2013 AND P.CUST_ID = 'C0000001'
AND DAY(P.SWEEP_DATE) = DAY(EOMONTH(P.SWEEP_DATE))
AND P.YEAR = 2013
AND P.PORTFOLIO = 'EQUITY ACCOUNT - FINANCIAL PORTFOLIO'
GO

SELECT P.[YEAR], 
	CV.QUARTER_NAME,
	CV.[MONTH_ABBREV], 
	P.[CUST_ID], 
	P.[PORTFOLIO_NO], 
	P.[PORTFOLIO], 
	P.[VALUE], 
	P.[SWEEP_DATE] 
FROM [TRADE].[PORTFOLIO] P
JOIN [MASTER_DATA].[CALENDAR_VIEW] CV
ON P.SWEEP_DATE = CV.CALENDAR_DATE
WHERE P.YEAR = 2013 AND P.CUST_ID = 'C0000001'
AND DAY(P.SWEEP_DATE) = DAY(EOMONTH(P.SWEEP_DATE))
AND P.YEAR = 2013
AND P.PORTFOLIO = 'SWAP ACCOUNT - FINANCIAL PORTFOLIO'
GO

SELECT P.[YEAR], 
	CV.QUARTER_NAME,
	CV.[MONTH_ABBREV], 
	P.[CUST_ID], 
	P.[PORTFOLIO_NO], 
	P.[PORTFOLIO], 
	P.[VALUE], 
	P.[SWEEP_DATE] 
FROM [TRADE].[PORTFOLIO] P
JOIN [MASTER_DATA].[CALENDAR_VIEW] CV
ON P.SWEEP_DATE = CV.CALENDAR_DATE
WHERE P.YEAR = 2013 AND P.CUST_ID = 'C0000001'
AND DAY(P.SWEEP_DATE) = DAY(EOMONTH(P.SWEEP_DATE))
AND P.YEAR = 2013
AND P.PORTFOLIO = 'OPTION ACCOUNT - FINANCIAL PORTFOLIO'
GO



/*****************/
/* CHECK RESULTS */
/*****************/

SELECT 
      [TRANS_DATE]
      ,[SYMBOL]
      ,[PRICE]
      ,[QUANTITY]
      ,[TRANS_AMOUNT]
      ,[CUST_ID]
      ,[PORTFOLIO_NO]
      ,[ACCT_NO]
      ,[BUY_SELL]
      ,[TRANS_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[TRANSACTION]
  WHERE [CUST_ID] ='C0000001'
  ORDER BY
      SYMBOL,TRANS_DATE,[CUST_ID]
      ,[PORTFOLIO_NO]
      ,[ACCT_NO]
	  ,[BUY_SELL]
GO


/************************************/
/* A SNEAK PEEK OF THE LAG FUNCTION */
/************************************/

SELECT [YEAR], 
	[MONTH], 
	[CUST_ID], 
	[PORTFOLIO_NO], 
	[PORTFOLIO], 
	[VALUE],
	LAG([VALUE]) OVER (
	--	PARTITION BY [MONTH]
		ORDER BY [MONTH]
		) AS [PRIOR_VALUE],

	[VALUE] + 
	LAG([VALUE]) OVER (
	--	PARTITION BY [MONTH]
		ORDER BY [MONTH]
		) AS [CURRENT_VALUE],
	[SWEEP_DATE]
FROM [TRADE].[PORTFOLIO]
WHERE YEAR = 2013 AND CUST_ID = 'C0000001'
AND DAY(SWEEP_DATE) = DAY(EOMONTH(SWEEP_DATE))
AND YEAR = 2013
AND PORTFOLIO = 'SWAP - FINANCIAL PORTFOLIO'
GO

SELECT [POST_DATE],
	[CUST_ID], 
	[PRTF_NO], 
	[ACCT_NO],
	[ACCT_NAME], 
	[ACCT_TYPE_CODE], 
	[ACCT_BALANCE] 
FROM [TRADE].[ACCOUNT]
ORDER BY [POST_DATE],
	[CUST_ID], 
	[PRTF_NO], 
	[ACCT_NO],
	[ACCT_NAME], 
	[ACCT_TYPE_CODE] 
GO

/******************/
/* TICKER SYMBOLS */
/******************/

DROP TABLE IF EXISTS TRADE.TICKER_SYMBOLS
GO

CREATE TABLE TRADE.TICKER_SYMBOLS
 (
 SYMBOL VARCHAR(64) NOT NULL,
 NAME VARCHAR(64) NOT NULL,
 TRANSACTION_TYPE_CODE VARCHAR(8) NOT NULL
 );
 GO

 TRUNCATE TABLE TRADE.TICKER_SYMBOLS
 GO
 
 INSERT INTO TRADE.TICKER_SYMBOLS
    VALUES 
	-- EQUITIES/STOCKS
	('AA','Alcoa','TT00002'), 
    ('AAL','American Airlines Group','TT00002'), 
    ('BSBR','Banco Santander Brasil','TT00002'), 
    ('GPL','Great Panther Mining','TT00002'), 
    ('GP','GreenPower Motor Company','TT00002'), 
    ('GPOR','Gulfport Energy','TT00002'),
	-- FX - Foreign Exchange
	('EURO','European Euro','TT00004'), 
    ('GBP','British Pound','TT00004'), 
    ('INR','Indian Rupee','TT00004'), 
    ('JPY','Japanese Yen','TT00004'), 
    ('SEK','Swedish Krona','TT00004'), 
	-- COMMODITIES FUTURES
	('GC=F','Gold','TT00006'), 
    ('SI=F','Silver','TT00006'), 
    ('HG=F','Copper','TT00006'), 
    ('CL=F','Crude Oil','TT00006'), 
    ('PL=F','Platinum','TT00006'), 
    ('CC=F','Cocoa','TT00006'), 
	-- CASH - MONEY MARKET
	('JPST','JPMorgan Ultra-Short Income ETF','TT00001'), 
    ('LDSF','First Trust Low Duration Strategic Focus ETF','TT00001'), 
    ('MUST','Columbia Multi-Sector Municipal Income ETF','TT00001'), 
    ('LSAT','Leadshares Alphafactor Tactical Focused ETF','TT00001'), 
    ('ARCM','Arrow Reserve Capitol Management ETF','TT00001'), 
    ('SPCX','SPAC and New Issue ETF','TT00001'), 
	('BOB','Merlyn.AI Dest-of-Breed Core Momentum ETF','TT00001'), 

	-- CASH - CHECKING
	('CHECKING','Customer Checking Account','TT00001'),

	-- INTEREST RATE SWAPS
	('USDSB3L2Y=','USD 2 Years Interest Rate Swap','TT00005'), 
    ('SWAADY10.RT','I/R Swap 10 - Year','TT00005'), 
    ('LIBOR OIS','LIBOR Overnight Index Swap','TT00005'), 
    ('SJB','ProShares Short High Yield','TT00005'), 
    ('SGOV','iShares 0-3 Month Treasury Bond ETF','TT00005'), 
    ('MARB','First Trust Merger Arbitrage ETF','TT00005'), 
	('RRH','Advocate Rising Rate Hedge ETF','TT00005'),
	-- OPTIONS (Last Price, Strike Price, Bid, Ask, Change,Volatility
	('PG111022C00060000','PG - Proctor & Gmble','TT00003'),
	('SPX141122P00019500','SPX - Standard & Poors 500','TT00003'),
	('LAMR150117C00052500','LAMR - Lamar Advertising Company','TT00003'),
	('AAPL131101C00470000','AAPL - Apple','TT00003'),
	('MSFT220422C0016000','MSFT - Microsoft Corporation','TT00003');
	GO

SELECT * FROM [TRADE].[TICKER_SYMBOLS]
GO

/*****************/
/* CHECK RESULTS */
/*****************/

SELECT [TRANS_DATE],
	[SYMBOL], 
	[PRICE], 
	[QUANTITY], 
	[TRANS_AMOUNT], 
	[CUST_ID], 
	[PORTFOLIO_NO], 
	[ACCT_NO], 
	[BUY_SELL], 
	[TRANS_TYPE_CODE]
FROM [TRADE].[TRANSACTION] T
WHERE SYMBOL LIKE '%AAPL131101C00470000'
--AND BUY_SELL IN('B','W')
--AND BUY_SELL IN('S','D')
AND T.[CUST_ID] ='C0000001'
  AND MONTH(T.[TRANS_DATE]) IN(1)
  AND YEAR(T.[TRANS_DATE]) = 2012
ORDER BY  T.[TRANS_DATE],[PRICE],[QUANTITY]
GO

-- SHOW RESULTS OF BUY/SELL AGAINST CASH ACCOUNT
SELECT 
      T.[TRANS_DATE]
      ,T.[SYMBOL]
      ,T.[PRICE]
      ,T.[QUANTITY]
      ,T.[TRANS_AMOUNT]
      ,T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
      ,T.[BUY_SELL]
      ,T.[TRANS_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[TRANSACTION] T
  WHERE T.[CUST_ID] ='C0000001'
 -- AND MONTH(T.[TRANS_DATE]) = 2
  AND YEAR(T.[TRANS_DATE]) = 2012
  AND [SYMBOL] LIKE '%AAPL%'
  ORDER BY
	  T.TRANS_DATE
	--  ,T.SYMBOL
	  ,T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
	  ,T.[BUY_SELL]
	  ,[TRANS_AMOUNT]
GO

SELECT 
      T.[TRANS_DATE]
      ,T.[SYMBOL]
      ,T.[PRICE]
      ,T.[QUANTITY]
      ,T.[TRANS_AMOUNT]
      ,T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
      ,T.[BUY_SELL]
      ,T.[TRANS_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[TRANSACTION] T
  WHERE T.[CUST_ID] ='C0000001'
 AND T.TRANS_AMOUNT IN(-33066.00,33066.00)
 -- AND MONTH(T.[TRANS_DATE]) = 2
 -- AND YEAR(T.[TRANS_DATE]) = 2012
  ORDER BY
	  T.TRANS_DATE
	  ,T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
	  ,T.[BUY_SELL]
GO

SELECT 
      T.[TRANS_DATE]
      ,T.[SYMBOL]
      ,T.[PRICE]
      ,T.[QUANTITY]
      ,T.[TRANS_AMOUNT]
      ,T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
      ,T.[BUY_SELL]
      ,T.[TRANS_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[TRANSACTION] T
  WHERE T.[CUST_ID] ='C0000001'
--  AND SYMBOL = 'GPL'
  AND T.TRANS_AMOUNT IN(-31070.00,31070.00)
--  AND MONTH(T.[TRANS_DATE]) = 2
  AND YEAR(T.[TRANS_DATE]) = 2012
  ORDER BY
	  T.TRANS_DATE
	  ,T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
	  ,T.[BUY_SELL]
GO

DROP INDEX IF EXISTS TRADE.ieTransCustomerIndex 
GO

CREATE NONCLUSTERED INDEX [ieTransCustomerIndex] ON [TRADE].[TRANSACTION]
(
	[CUST_ID] ASC
)WITH (
	PAD_INDEX = OFF, 
	STATISTICS_NORECOMPUTE = OFF, 
	SORT_IN_TEMPDB = OFF, 
	DROP_EXISTING = OFF, 
	ONLINE = OFF, 
	ALLOW_ROW_LOCKS = ON, 
	ALLOW_PAGE_LOCKS = ON, 
	OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF
	) ON [AP_FINANCE_FG]
GO

SELECT 
      T.[TRANS_DATE]
      ,T.[SYMBOL]
      ,T.[PRICE]
      ,T.[QUANTITY]
      ,T.[TRANS_AMOUNT]
      ,T.[CUST_ID]
	  ,C.[CUST_FNAME]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
      ,T.[BUY_SELL]
      ,T.[TRANS_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[TRANSACTION] T
  JOIN [MASTER_DATA].[CUSTOMER] C
  ON T.CUST_ID = C.CUST_ID
  WHERE T.[CUST_ID] ='C0000001'
  ORDER BY
      T.SYMBOL,TRANS_DATE
	  ,T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
	  ,T.[BUY_SELL]
GO

DROP INDEX IF EXISTS ieTransDateIndex 
GO

CREATE INDEX ieTransDateIndex 
ON [TRADE].[TRANSACTION] ([TRANS_DATE])
GO

SELECT 
      T.[TRANS_DATE]
      ,T.[SYMBOL]
      ,T.[PRICE]
      ,T.[QUANTITY]
      ,T.[TRANS_AMOUNT]
      ,T.[CUST_ID]
	  ,C.[CUST_FNAME]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
      ,T.[BUY_SELL]
      ,T.[TRANS_TYPE_CODE]
  FROM [AP_FINANCE].[TRADE].[TRANSACTION] T
  JOIN [MASTER_DATA].[CUSTOMER] C
  ON T.CUST_ID = C.CUST_ID
  WHERE T.[CUST_ID] ='C0000001'
  AND T.TRANS_DATE = '22012-11-06' 
  ORDER BY
      T.SYMBOL,TRANS_DATE
	  ,T.[CUST_ID]
      ,T.[PORTFOLIO_NO]
      ,T.[ACCT_NO]
	  ,T.[BUY_SELL]

GO




