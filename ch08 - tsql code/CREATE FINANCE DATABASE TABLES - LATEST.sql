USE [AP_FINANCE]
GO

-- AS OF 04/20/2022

/*
DROP SCHEMA IF EXISTS MASTER_DATA
GO

CREATE SCHEMA MASTER_DATA
GO

DROP SCHEMA IF EXISTS TRADE
GO

CREATE SCHEMA TRADE
GO

CREATE PROCEDURE [TRADE].[usp_RandomFloat]
@RANDOM_VALUE FLOAT OUTPUT, @START_RANGE FLOAT, @STOP_RANGE FLOAT
AS
SET @RANDOM_VALUE = CONVERT (FLOAT, ROUND(UPPER(RAND() * @STOP_RANGE + @START_RANGE), 0));
GO

/************************************/
/* EQUITY TRADE GENERATOR PROCEDURE */
/************************************/

CREATE  PROCEDURE [TRADE].[uspEquityTradeGenerator]
@CUST_ID			VARCHAR (8), 
@PORTFOLIO_NO		VARCHAR (8), 
@ACCT_NO			VARCHAR (8), 
@BUY_SELL			CHAR (1), 
@TRANS_TYPE_CODE	VARCHAR (8)
AS
BEGIN
    DECLARE @EQUITY TABLE (
        SYMBOL VARCHAR (64) NOT NULL);

    DECLARE @TRADE TABLE (
        SHARES      INT   NOT NULL,
        DAY_OF_YEAR INT  ,
        PRICE       FLOAT);

    INSERT  INTO @EQUITY
    VALUES ('AAA'),
    ('BBB'),
    ('CCC'),
    ('DDD'),
    ('EEE'),
    ('FFF');

    DECLARE @START AS INT;
    DECLARE @STOP AS INT;
    DECLARE @RANDOM_QTY AS FLOAT;
    DECLARE @PRICE AS FLOAT;

    SET @START = 1;
    SET @STOP = 365;

    WHILE @START <= @STOP
        BEGIN
            EXECUTE TRADE.usp_RandomFloat @RANDOM_QTY OUTPUT, 100, 200;
            EXECUTE TRADE.usp_RandomFloat @PRICE OUTPUT, 15, 30;
            INSERT  INTO @TRADE
            VALUES (@RANDOM_QTY, @START, @PRICE);
            SET @START = @START + 1;
        END

    SELECT   CAL.CALENDAR_DATE,
             C.SYMBOL,
             CC.PRICE + ASCII(SUBSTRING(C.SYMBOL, 2, 1)) + 15.00 AS PRICE,
             CC.SHARES + ASCII(RIGHT(C.SYMBOL, 1)) AS SHARES,
             @CUST_ID AS CUST_ID,
             @PORTFOLIO_NO AS PORTFOLIO_NO,
             @ACCT_NO AS ACCT_NO,
             @BUY_SELL AS BUY_SELL,
             @TRANS_TYPE_CODE AS TRANS_TYPE_CODE
    FROM     @EQUITY AS C CROSS JOIN @TRADE AS CC
             INNER JOIN
             [MASTER_DATA].[CALENDAR] AS CAL
             ON DATEPART(dayofyear, CAL.CALENDAR_DATE) = CC.DAY_OF_YEAR
    ORDER BY 1, 2, 3;
END
GO

/******************************************/
/* EQUITY TRANSACTION GENERATOR PROCEDURE */
/******************************************/

CREATE OR ALTER PROCEDURE TRADE.usp_EquityTransactionGenerator
@CUST_ID VARCHAR(8),
@PORTFOLIO_NO VARCHAR(8),
@ACCT_NO VARCHAR(8),
@BUY_SELL CHAR(1)
AS
BEGIN
DECLARE @TRADES TABLE
	(
	TRANS_DATE DATE,
	SYMBOL VARCHAR(8),
	PRICE MONEY,
	SHARES INT,
	CUST_ID CHAR(8),
	PORTFOLIO_NO VARCHAR(8),
	ACCT_NO VARCHAR(8),
	[BUY_SELL] CHAR(1),
	[TRANS_TYPE_CODE] VARCHAR(8)
);

/*******************************************/
/* DAYS WHEN BUY TRANSACTIONS ARE EXECUTED */
/*******************************************/

DECLARE @BUYDAYS TABLE (
	DAYS INT
	);

INSERT INTO @BUYDAYS VALUES (5),(10),(15),(20),(25);

/********************************************/
/* DAYS WHEN SELL TRANSACTIONS ARE EXECUTED */
/********************************************/

DECLARE @SELLDAYS TABLE (
	DAYS INT
	);

/***********************************************/
/* DEPENDING ON BUY SELL FLAG SETTING THIS     */
/* TABLE WILL BE LOADED WITH BUY OR SELL DAYS. */
/***********************************************/

DECLARE @TRANS_DAYS TABLE (
	DAYS INT
	);

INSERT INTO @SELLDAYS VALUES (12),(18),(29);
IF @BUY_SELL = 'B'
	BEGIN
	INSERT INTO @TRANS_DAYS
	SELECT DAYS FROM @BUYDAYS
	END
ELSE IF @BUY_SELL = 'S'
	BEGIN
	INSERT INTO @TRANS_DAYS
	SELECT DAYS FROM @SELLDAYS
	END

DECLARE @TRANS_TYPE_CODE VARCHAR(8);

SET @TRANS_TYPE_CODE = 'TT00002';

INSERT INTO @TRADES
EXEC TRADE.uspEquityTradeGenerator
@CUST_ID,
@PORTFOLIO_NO,
@ACCT_NO,
@BUY_SELL,
@TRANS_TYPE_CODE

INSERT INTO [TRADE].[TRANSACTION]
SELECT TRANS_DATE,
	SYMBOL ,
	PRICE,
	SHARES,

	-- see if this is a buy or sell transaction
	-- if sell, amount set to negative
	CASE
		WHEN @BUY_SELL = 'B'
			THEN (PRICE * SHARES)
		WHEN @BUY_SELL = 'S'
			THEN -(PRICE * SHARES)
			
	END	AS [TRANS_AMOUNT],

	CUST_ID ,
	PORTFOLIO_NO,
	ACCT_NO,
	BUY_SELL,
	TRANS_TYPE_CODE
FROM @TRADES
WHERE DAY(TRANS_DATE) IN (SELECT DAYS FROM @TRANS_DAYS)
END
GO

*/

/************/
/* CUSTOMER */
/************/

DROP TABLE IF EXISTS [MASTER_DATA].[CUSTOMER]
GO

CREATE TABLE [MASTER_DATA].[CUSTOMER](
	[CUST_KEY] [int] IDENTITY(1,1) NOT NULL,
	[CUST_ID] [VARCHAR](8) NOT NULL,
	[CUST_LNAME] [VARCHAR](64) NOT NULL,
	[CUST_FNAME] [VARCHAR](64) NOT NULL,
	[CUST_INCOME] [MONEY] NOT NULL,
	[INCOME_BRACKET] [VARCHAR](64) NOT NULL
) ON [AP_FINANCE_FG]
GO

/************/
/* CALENDAR */
/************/

DROP TABLE IF EXISTS [MASTER_DATA].[CALENDAR]
GO

CREATE TABLE [MASTER_DATA].[CALENDAR](
	[CALENDAR_KEY] [int] NOT NULL,
	[CALENDAR_YEAR] [int] NOT NULL,
	[CALENDAR_QTR] [int] NULL,
	[CALENDAR_MONTH] [int] NULL,
	[CALENDAR_DATE] [DATE] NOT NULL
) ON [AP_FINANCE_FG]
GO

/*****************/
/* CALENDAR VIEW */
/*****************/

CREATE VIEW [MASTER_DATA].[CALENDAR_VIEW]
AS
SELECT [CALENDAR_KEY],
	[CALENDAR_YEAR],
    [CALENDAR_QTR],
	CASE 
		WHEN [CALENDAR_QTR] = 1 THEN '1st Quarter' 
		WHEN [CALENDAR_QTR] = 2 THEN '2nd Quarter' 
		WHEN [CALENDAR_QTR] = 3 THEN '3rd Quarter' 
		WHEN [CALENDAR_QTR] = 4 THEN '4th Quarter' 
	END AS QUARTER_NAME,

    [CALENDAR_MONTH],

    CASE 
		WHEN [CALENDAR_MONTH] = 1 THEN 'Jan' 
		WHEN [CALENDAR_MONTH] = 2 THEN 'Feb' 
		WHEN [CALENDAR_MONTH] = 3 THEN 'Mar' 
		WHEN [CALENDAR_MONTH] = 4 THEN 'Apr' 
		WHEN [CALENDAR_MONTH] = 5 THEN 'May' 
		WHEN [CALENDAR_MONTH] = 6 THEN 'Jun' 
		WHEN [CALENDAR_MONTH] = 7 THEN 'Jul' 
		WHEN [CALENDAR_MONTH] = 8 THEN 'Aug' 
		WHEN [CALENDAR_MONTH] = 9 THEN 'Sep' 
		WHEN [CALENDAR_MONTH] = 10 THEN 'Oct' 
		WHEN [CALENDAR_MONTH] = 11 THEN 'Nov' 
		WHEN [CALENDAR_MONTH] = 12 THEN 'Dec' 
	END AS MONTH_ABBREV,

    CASE 
		WHEN [CALENDAR_MONTH] = 1 THEN 'January' 
		WHEN [CALENDAR_MONTH] = 2 THEN 'February' 
		WHEN [CALENDAR_MONTH] = 3 THEN 'March' 
		WHEN [CALENDAR_MONTH] = 4 THEN 'April' 
		WHEN [CALENDAR_MONTH] = 5 THEN 'May' 
		WHEN [CALENDAR_MONTH] = 6 THEN 'June' 
		WHEN [CALENDAR_MONTH] = 7 THEN 'July' 
		WHEN [CALENDAR_MONTH] = 8 THEN 'August' 
		WHEN [CALENDAR_MONTH] = 9 THEN 'September'
		WHEN [CALENDAR_MONTH] = 10 THEN 'October' 
		WHEN [CALENDAR_MONTH] = 11 THEN 'November' 
		WHEN [CALENDAR_MONTH] = 12 THEN 'December' 
	END AS MONTH_NAME,
    
	[CALENDAR_DATE]
FROM [MASTER_DATA].[CALENDAR];
GO


/*************/
/* PORTFOLIO */
/*************/

DROP TABLE IF EXISTS [TRADE].[PORTFOLIO]
GO

CREATE TABLE [TRADE].[PORTFOLIO](
	[YEAR] [int] NOT NULL,
	[MONTH] [int] NOT NULL,
	[CUST_ID] [varchar](8) NOT NULL,
	[PORTFOLIO_NO] [varchar](8) NOT NULL,
	[PORTFOLIO] [varchar](278) NOT NULL,
	[VALUE] [money] NOT NULL DEFAULT 0,
	[SWEEP_DATE] [date] NOT NULL
) ON [AP_FINANCE_FG]
GO

/****************/
/* ACCOUNT TYPE */
/****************/

DROP TABLE IF EXISTS [MASTER_DATA].[ACCOUNT_TYPE]
GO

CREATE TABLE [MASTER_DATA].[ACCOUNT_TYPE](
	[ACCT_TYPE_KEY]  [int] IDENTITY(1,1) NOT NULL,
	[ACCT_TYPE_CODE] [VARCHAR](8) NOT NULL,
	[ACCT_TYPE_NAME] [VARCHAR](64) NOT NULL
) ON [AP_FINANCE_FG]
GO

/***********/
/* ACCOUNT */
/***********/

DROP TABLE IF EXISTS [TRADE].[ACCOUNT]
GO

CREATE TABLE [TRADE].[ACCOUNT](
	[ACCT_KEY]       [int] IDENTITY(1,1) NOT NULL,
	[CUST_ID]        [VARCHAR](8)        NOT NULL,
	[PRTF_NO]        [VARCHAR](8)        NOT NULL,
	[ACCT_NO]        [VARCHAR](64)       NOT NULL,
	[ACCT_NAME]      [VARCHAR](24)       NOT NULL,
	[ACCT_TYPE_CODE] [VARCHAR](8)        NOT NULL,
	[ACCT_BALANCE]   [MONEY]             NOT NULL,
	[POST_DATE]      [DATE]				 NOT NULL
) ON [AP_FINANCE_FG]
GO

/********************/
/* TRANSACTION TYPE */
/********************/

DROP TABLE IF EXISTS [MASTER_DATA].[TRANSACTION_TYPE]
GO

CREATE TABLE [MASTER_DATA].[TRANSACTION_TYPE](
	[TRANS_TYPE_KEY]         [INTEGER] IDENTITY(1,1) NOT NULL,
	[TRANS_TYPE_CODE]        [VARCHAR](32)       NOT NULL,
	[TRANS_TYPE_DESCRIPTION] [VARCHAR](256)      NOT NULL
) ON [AP_FINANCE_FG]
GO

/***************/
/* TRANSACTION */
/***************/

DROP TABLE IF EXISTS [TRADE].[TRANSACTION]
GO

CREATE TABLE [TRADE].[TRANSACTION](
	[TRANS_KEY]       [INTEGER] IDENTITY(1,1) NOT NULL,
	[TRANS_DATE]      [DATE]        NOT NULL,
	[SYMBOL]          [VARCHAR](64)  NOT NULL,
	[PRICE]           [MONEY]       NOT NULL,
	[QUANTITY]        [MONEY]       NOT NULL,
	[TRANS_AMOUNT]    [MONEY]       NOT NULL,
	[CUST_ID]         [VARCHAR](8)  NOT NULL,
	[PORTFOLIO_NO]    [VARCHAR](8)  NOT NULL,
	[ACCT_NO]         [VARCHAR](32) NOT NULL,
	[BUY_SELL]        [CHAR](1)     NOT NULL,
	[TRANS_TYPE_CODE] [VARCHAR](8)  NOT NULL
) ON [AP_FINANCE_FG]
GO

/*******************/
/* TRADING SYMBOLS */
/*******************/

CREATE TABLE [TRADE].[TICKER_SYMBOLS](
	[SYMBOL] [varchar](64) NOT NULL,
	[NAME]   [varchar](64) NOT NULL
) ON [AP_FINANCE_FG]
GO

